<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Azure.Security.KeyVault.Certificates.4.1.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.AdministratorContact</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.#ctor(Azure.Security.KeyVault.Certificates.AdministratorContact)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.AllInstances.EmailGet">
            <summary>Sets the shim of AdministratorContact.get_Email(AdministratorContact this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.AllInstances.EmailSetString">
            <summary>Sets the shim of AdministratorContact.set_Email(AdministratorContact this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.AllInstances.FirstNameGet">
            <summary>Sets the shim of AdministratorContact.get_FirstName(AdministratorContact this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.AllInstances.FirstNameSetString">
            <summary>Sets the shim of AdministratorContact.set_FirstName(AdministratorContact this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.AllInstances.LastNameGet">
            <summary>Sets the shim of AdministratorContact.get_LastName(AdministratorContact this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.AllInstances.LastNameSetString">
            <summary>Sets the shim of AdministratorContact.set_LastName(AdministratorContact this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.AllInstances.PhoneGet">
            <summary>Sets the shim of AdministratorContact.get_Phone(AdministratorContact this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.AllInstances.PhoneSetString">
            <summary>Sets the shim of AdministratorContact.set_Phone(AdministratorContact this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.AllInstances.ReadPropertiesJsonElement">
            <summary>Sets the shim of AdministratorContact.ReadProperties(AdministratorContact this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.AllInstances.WritePropertiesUtf8JsonWriter">
            <summary>Sets the shim of AdministratorContact.WriteProperties(AdministratorContact this, Utf8JsonWriter json)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.Constructor">
            <summary>Sets the shim of AdministratorContact.AdministratorContact(AdministratorContact this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.EmailGet">
            <summary>Sets the shim of AdministratorContact.get_Email(AdministratorContact this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.EmailSetString">
            <summary>Sets the shim of AdministratorContact.set_Email(AdministratorContact this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.FirstNameGet">
            <summary>Sets the shim of AdministratorContact.get_FirstName(AdministratorContact this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.FirstNameSetString">
            <summary>Sets the shim of AdministratorContact.set_FirstName(AdministratorContact this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.LastNameGet">
            <summary>Sets the shim of AdministratorContact.get_LastName(AdministratorContact this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.LastNameSetString">
            <summary>Sets the shim of AdministratorContact.set_LastName(AdministratorContact this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.PhoneGet">
            <summary>Sets the shim of AdministratorContact.get_Phone(AdministratorContact this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.PhoneSetString">
            <summary>Sets the shim of AdministratorContact.set_Phone(AdministratorContact this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.ReadPropertiesJsonElement">
            <summary>Sets the shim of AdministratorContact.ReadProperties(AdministratorContact this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.StaticConstructor">
            <summary>Sets the shim of AdministratorContact.AdministratorContact()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimAdministratorContact.WritePropertiesUtf8JsonWriter">
            <summary>Sets the shim of AdministratorContact.WriteProperties(AdministratorContact this, Utf8JsonWriter json)</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.CertificateClient</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.#ctor(Azure.Security.KeyVault.Certificates.CertificateClient)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.BackupCertificateAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.BackupCertificateAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.BackupCertificateStringCancellationToken">
            <summary>Sets the shim of CertificateClient.BackupCertificate(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.CancelCertificateOperationAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.CancelCertificateOperationAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.CancelCertificateOperationStringCancellationToken">
            <summary>Sets the shim of CertificateClient.CancelCertificateOperation(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.CreateIssuerAsyncCertificateIssuerCancellationToken">
            <summary>Sets the shim of CertificateClient.CreateIssuerAsync(CertificateClient this, CertificateIssuer issuer, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.CreateIssuerCertificateIssuerCancellationToken">
            <summary>Sets the shim of CertificateClient.CreateIssuer(CertificateClient this, CertificateIssuer issuer, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.DeleteCertificateOperationAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.DeleteCertificateOperationAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.DeleteCertificateOperationStringCancellationToken">
            <summary>Sets the shim of CertificateClient.DeleteCertificateOperation(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.DeleteContactsAsyncCancellationToken">
            <summary>Sets the shim of CertificateClient.DeleteContactsAsync(CertificateClient this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.DeleteContactsCancellationToken">
            <summary>Sets the shim of CertificateClient.DeleteContacts(CertificateClient this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.DeleteIssuerAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.DeleteIssuerAsync(CertificateClient this, String issuerName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.DeleteIssuerStringCancellationToken">
            <summary>Sets the shim of CertificateClient.DeleteIssuer(CertificateClient this, String issuerName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.GetCertificateAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetCertificateAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.GetCertificateOperationAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetCertificateOperationAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.GetCertificateOperationStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetCertificateOperation(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.GetCertificatePolicyAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetCertificatePolicyAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.GetCertificatePolicyStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetCertificatePolicy(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.GetCertificateStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetCertificate(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.GetCertificateVersionAsyncStringStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetCertificateVersionAsync(CertificateClient this, String certificateName, String version, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.GetCertificateVersionStringStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetCertificateVersion(CertificateClient this, String certificateName, String version, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.GetContactsAsyncCancellationToken">
            <summary>Sets the shim of CertificateClient.GetContactsAsync(CertificateClient this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.GetContactsCancellationToken">
            <summary>Sets the shim of CertificateClient.GetContacts(CertificateClient this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.GetDeletedCertificateAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetDeletedCertificateAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.GetDeletedCertificateStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetDeletedCertificate(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.GetDeletedCertificatesAsyncBooleanCancellationToken">
            <summary>Sets the shim of CertificateClient.GetDeletedCertificatesAsync(CertificateClient this, Boolean includePending, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.GetDeletedCertificatesBooleanCancellationToken">
            <summary>Sets the shim of CertificateClient.GetDeletedCertificates(CertificateClient this, Boolean includePending, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.GetIssuerAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetIssuerAsync(CertificateClient this, String issuerName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.GetIssuerStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetIssuer(CertificateClient this, String issuerName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.GetPendingCertificateAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetPendingCertificateAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.GetPendingCertificateStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetPendingCertificate(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.GetPropertiesOfCertificateVersionsAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetPropertiesOfCertificateVersionsAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.GetPropertiesOfCertificateVersionsStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetPropertiesOfCertificateVersions(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.GetPropertiesOfCertificatesAsyncBooleanCancellationToken">
            <summary>Sets the shim of CertificateClient.GetPropertiesOfCertificatesAsync(CertificateClient this, Boolean includePending, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.GetPropertiesOfCertificatesBooleanCancellationToken">
            <summary>Sets the shim of CertificateClient.GetPropertiesOfCertificates(CertificateClient this, Boolean includePending, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.GetPropertiesOfIssuersAsyncCancellationToken">
            <summary>Sets the shim of CertificateClient.GetPropertiesOfIssuersAsync(CertificateClient this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.GetPropertiesOfIssuersCancellationToken">
            <summary>Sets the shim of CertificateClient.GetPropertiesOfIssuers(CertificateClient this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.ImportCertificateAsyncImportCertificateOptionsCancellationToken">
            <summary>Sets the shim of CertificateClient.ImportCertificateAsync(CertificateClient this, ImportCertificateOptions importCertificateOptions, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.ImportCertificateImportCertificateOptionsCancellationToken">
            <summary>Sets the shim of CertificateClient.ImportCertificate(CertificateClient this, ImportCertificateOptions importCertificateOptions, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.MergeCertificateAsyncMergeCertificateOptionsCancellationToken">
            <summary>Sets the shim of CertificateClient.MergeCertificateAsync(CertificateClient this, MergeCertificateOptions mergeCertificateOptions, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.MergeCertificateMergeCertificateOptionsCancellationToken">
            <summary>Sets the shim of CertificateClient.MergeCertificate(CertificateClient this, MergeCertificateOptions mergeCertificateOptions, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.PurgeDeletedCertificateAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.PurgeDeletedCertificateAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.PurgeDeletedCertificateStringCancellationToken">
            <summary>Sets the shim of CertificateClient.PurgeDeletedCertificate(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.RestoreCertificateBackupAsyncByteArrayCancellationToken">
            <summary>Sets the shim of CertificateClient.RestoreCertificateBackupAsync(CertificateClient this, Byte[] backup, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.RestoreCertificateBackupByteArrayCancellationToken">
            <summary>Sets the shim of CertificateClient.RestoreCertificateBackup(CertificateClient this, Byte[] backup, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.SetContactsAsyncIEnumerableOfCertificateContactCancellationToken">
            <summary>Sets the shim of CertificateClient.SetContactsAsync(CertificateClient this, IEnumerable`1 contacts, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.SetContactsIEnumerableOfCertificateContactCancellationToken">
            <summary>Sets the shim of CertificateClient.SetContacts(CertificateClient this, IEnumerable`1 contacts, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.StartCreateCertificateAsyncStringCertificatePolicyNullableOfBooleanIDictionaryOfStringStringCancellationToken">
            <summary>Sets the shim of CertificateClient.StartCreateCertificateAsync(CertificateClient this, String certificateName, CertificatePolicy policy, Nullable`1 enabled, IDictionary`2 tags, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.StartCreateCertificateStringCertificatePolicyNullableOfBooleanIDictionaryOfStringStringCancellationToken">
            <summary>Sets the shim of CertificateClient.StartCreateCertificate(CertificateClient this, String certificateName, CertificatePolicy policy, Nullable`1 enabled, IDictionary`2 tags, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.StartDeleteCertificateAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.StartDeleteCertificateAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.StartDeleteCertificateStringCancellationToken">
            <summary>Sets the shim of CertificateClient.StartDeleteCertificate(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.StartRecoverDeletedCertificateAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.StartRecoverDeletedCertificateAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.StartRecoverDeletedCertificateStringCancellationToken">
            <summary>Sets the shim of CertificateClient.StartRecoverDeletedCertificate(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.UpdateCertificatePolicyAsyncStringCertificatePolicyCancellationToken">
            <summary>Sets the shim of CertificateClient.UpdateCertificatePolicyAsync(CertificateClient this, String certificateName, CertificatePolicy policy, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.UpdateCertificatePolicyStringCertificatePolicyCancellationToken">
            <summary>Sets the shim of CertificateClient.UpdateCertificatePolicy(CertificateClient this, String certificateName, CertificatePolicy policy, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.UpdateCertificatePropertiesAsyncCertificatePropertiesCancellationToken">
            <summary>Sets the shim of CertificateClient.UpdateCertificatePropertiesAsync(CertificateClient this, CertificateProperties properties, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.UpdateCertificatePropertiesCertificatePropertiesCancellationToken">
            <summary>Sets the shim of CertificateClient.UpdateCertificateProperties(CertificateClient this, CertificateProperties properties, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.UpdateIssuerAsyncCertificateIssuerCancellationToken">
            <summary>Sets the shim of CertificateClient.UpdateIssuerAsync(CertificateClient this, CertificateIssuer issuer, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.UpdateIssuerCertificateIssuerCancellationToken">
            <summary>Sets the shim of CertificateClient.UpdateIssuer(CertificateClient this, CertificateIssuer issuer, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.AllInstances.VaultUriGet">
            <summary>Sets the shim of CertificateClient.get_VaultUri(CertificateClient this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.BackupCertificateAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.BackupCertificateAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.BackupCertificateStringCancellationToken">
            <summary>Sets the shim of CertificateClient.BackupCertificate(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.CancelCertificateOperationAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.CancelCertificateOperationAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.CancelCertificateOperationStringCancellationToken">
            <summary>Sets the shim of CertificateClient.CancelCertificateOperation(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.Constructor">
            <summary>Sets the shim of CertificateClient.CertificateClient(CertificateClient this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.ConstructorUriTokenCredential">
            <summary>Sets the shim of CertificateClient.CertificateClient(CertificateClient this, Uri vaultUri, TokenCredential credential)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.ConstructorUriTokenCredentialCertificateClientOptions">
            <summary>Sets the shim of CertificateClient.CertificateClient(CertificateClient this, Uri vaultUri, TokenCredential credential, CertificateClientOptions options)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.CreateIssuerAsyncCertificateIssuerCancellationToken">
            <summary>Sets the shim of CertificateClient.CreateIssuerAsync(CertificateClient this, CertificateIssuer issuer, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.CreateIssuerCertificateIssuerCancellationToken">
            <summary>Sets the shim of CertificateClient.CreateIssuer(CertificateClient this, CertificateIssuer issuer, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.DeleteCertificateOperationAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.DeleteCertificateOperationAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.DeleteCertificateOperationStringCancellationToken">
            <summary>Sets the shim of CertificateClient.DeleteCertificateOperation(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.DeleteContactsAsyncCancellationToken">
            <summary>Sets the shim of CertificateClient.DeleteContactsAsync(CertificateClient this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.DeleteContactsCancellationToken">
            <summary>Sets the shim of CertificateClient.DeleteContacts(CertificateClient this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.DeleteIssuerAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.DeleteIssuerAsync(CertificateClient this, String issuerName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.DeleteIssuerStringCancellationToken">
            <summary>Sets the shim of CertificateClient.DeleteIssuer(CertificateClient this, String issuerName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.GetCertificateAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetCertificateAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.GetCertificateOperationAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetCertificateOperationAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.GetCertificateOperationStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetCertificateOperation(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.GetCertificatePolicyAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetCertificatePolicyAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.GetCertificatePolicyStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetCertificatePolicy(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.GetCertificateStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetCertificate(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.GetCertificateVersionAsyncStringStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetCertificateVersionAsync(CertificateClient this, String certificateName, String version, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.GetCertificateVersionStringStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetCertificateVersion(CertificateClient this, String certificateName, String version, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.GetContactsAsyncCancellationToken">
            <summary>Sets the shim of CertificateClient.GetContactsAsync(CertificateClient this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.GetContactsCancellationToken">
            <summary>Sets the shim of CertificateClient.GetContacts(CertificateClient this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.GetDeletedCertificateAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetDeletedCertificateAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.GetDeletedCertificateStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetDeletedCertificate(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.GetDeletedCertificatesAsyncBooleanCancellationToken">
            <summary>Sets the shim of CertificateClient.GetDeletedCertificatesAsync(CertificateClient this, Boolean includePending, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.GetDeletedCertificatesBooleanCancellationToken">
            <summary>Sets the shim of CertificateClient.GetDeletedCertificates(CertificateClient this, Boolean includePending, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.GetIssuerAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetIssuerAsync(CertificateClient this, String issuerName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.GetIssuerStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetIssuer(CertificateClient this, String issuerName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.GetPendingCertificateAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetPendingCertificateAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.GetPendingCertificateStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetPendingCertificate(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.GetPropertiesOfCertificateVersionsAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetPropertiesOfCertificateVersionsAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.GetPropertiesOfCertificateVersionsStringCancellationToken">
            <summary>Sets the shim of CertificateClient.GetPropertiesOfCertificateVersions(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.GetPropertiesOfCertificatesAsyncBooleanCancellationToken">
            <summary>Sets the shim of CertificateClient.GetPropertiesOfCertificatesAsync(CertificateClient this, Boolean includePending, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.GetPropertiesOfCertificatesBooleanCancellationToken">
            <summary>Sets the shim of CertificateClient.GetPropertiesOfCertificates(CertificateClient this, Boolean includePending, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.GetPropertiesOfIssuersAsyncCancellationToken">
            <summary>Sets the shim of CertificateClient.GetPropertiesOfIssuersAsync(CertificateClient this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.GetPropertiesOfIssuersCancellationToken">
            <summary>Sets the shim of CertificateClient.GetPropertiesOfIssuers(CertificateClient this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.ImportCertificateAsyncImportCertificateOptionsCancellationToken">
            <summary>Sets the shim of CertificateClient.ImportCertificateAsync(CertificateClient this, ImportCertificateOptions importCertificateOptions, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.ImportCertificateImportCertificateOptionsCancellationToken">
            <summary>Sets the shim of CertificateClient.ImportCertificate(CertificateClient this, ImportCertificateOptions importCertificateOptions, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.MergeCertificateAsyncMergeCertificateOptionsCancellationToken">
            <summary>Sets the shim of CertificateClient.MergeCertificateAsync(CertificateClient this, MergeCertificateOptions mergeCertificateOptions, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.MergeCertificateMergeCertificateOptionsCancellationToken">
            <summary>Sets the shim of CertificateClient.MergeCertificate(CertificateClient this, MergeCertificateOptions mergeCertificateOptions, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.PurgeDeletedCertificateAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.PurgeDeletedCertificateAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.PurgeDeletedCertificateStringCancellationToken">
            <summary>Sets the shim of CertificateClient.PurgeDeletedCertificate(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.RestoreCertificateBackupAsyncByteArrayCancellationToken">
            <summary>Sets the shim of CertificateClient.RestoreCertificateBackupAsync(CertificateClient this, Byte[] backup, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.RestoreCertificateBackupByteArrayCancellationToken">
            <summary>Sets the shim of CertificateClient.RestoreCertificateBackup(CertificateClient this, Byte[] backup, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.SetContactsAsyncIEnumerableOfCertificateContactCancellationToken">
            <summary>Sets the shim of CertificateClient.SetContactsAsync(CertificateClient this, IEnumerable`1 contacts, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.SetContactsIEnumerableOfCertificateContactCancellationToken">
            <summary>Sets the shim of CertificateClient.SetContacts(CertificateClient this, IEnumerable`1 contacts, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.StartCreateCertificateAsyncStringCertificatePolicyNullableOfBooleanIDictionaryOfStringStringCancellationToken">
            <summary>Sets the shim of CertificateClient.StartCreateCertificateAsync(CertificateClient this, String certificateName, CertificatePolicy policy, Nullable`1 enabled, IDictionary`2 tags, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.StartCreateCertificateStringCertificatePolicyNullableOfBooleanIDictionaryOfStringStringCancellationToken">
            <summary>Sets the shim of CertificateClient.StartCreateCertificate(CertificateClient this, String certificateName, CertificatePolicy policy, Nullable`1 enabled, IDictionary`2 tags, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.StartDeleteCertificateAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.StartDeleteCertificateAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.StartDeleteCertificateStringCancellationToken">
            <summary>Sets the shim of CertificateClient.StartDeleteCertificate(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.StartRecoverDeletedCertificateAsyncStringCancellationToken">
            <summary>Sets the shim of CertificateClient.StartRecoverDeletedCertificateAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.StartRecoverDeletedCertificateStringCancellationToken">
            <summary>Sets the shim of CertificateClient.StartRecoverDeletedCertificate(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.UpdateCertificatePolicyAsyncStringCertificatePolicyCancellationToken">
            <summary>Sets the shim of CertificateClient.UpdateCertificatePolicyAsync(CertificateClient this, String certificateName, CertificatePolicy policy, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.UpdateCertificatePolicyStringCertificatePolicyCancellationToken">
            <summary>Sets the shim of CertificateClient.UpdateCertificatePolicy(CertificateClient this, String certificateName, CertificatePolicy policy, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.UpdateCertificatePropertiesAsyncCertificatePropertiesCancellationToken">
            <summary>Sets the shim of CertificateClient.UpdateCertificatePropertiesAsync(CertificateClient this, CertificateProperties properties, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.UpdateCertificatePropertiesCertificatePropertiesCancellationToken">
            <summary>Sets the shim of CertificateClient.UpdateCertificateProperties(CertificateClient this, CertificateProperties properties, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.UpdateIssuerAsyncCertificateIssuerCancellationToken">
            <summary>Sets the shim of CertificateClient.UpdateIssuerAsync(CertificateClient this, CertificateIssuer issuer, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.UpdateIssuerCertificateIssuerCancellationToken">
            <summary>Sets the shim of CertificateClient.UpdateIssuer(CertificateClient this, CertificateIssuer issuer, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClient.VaultUriGet">
            <summary>Sets the shim of CertificateClient.get_VaultUri(CertificateClient this)</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClientOptions">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.CertificateClientOptions</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClientOptions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClientOptions.#ctor(Azure.Security.KeyVault.Certificates.CertificateClientOptions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClientOptions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClientOptions.AllInstances.GetVersionString">
            <summary>Sets the shim of CertificateClientOptions.GetVersionString(CertificateClientOptions this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClientOptions.AllInstances.VersionGet">
            <summary>Sets the shim of CertificateClientOptions.get_Version(CertificateClientOptions this)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClientOptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClientOptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClientOptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClientOptions.ConstructorCertificateClientOptionsServiceVersion">
            <summary>Sets the shim of CertificateClientOptions.CertificateClientOptions(CertificateClientOptions this, ServiceVersion version)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClientOptions.GetVersionString">
            <summary>Sets the shim of CertificateClientOptions.GetVersionString(CertificateClientOptions this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateClientOptions.VersionGet">
            <summary>Sets the shim of CertificateClientOptions.get_Version(CertificateClientOptions this)</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContact">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.CertificateContact</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContact.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContact.#ctor(Azure.Security.KeyVault.Certificates.CertificateContact)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContact.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContact.AllInstances.AzureSecurityKeyVaultIJsonDeserializableReadPropertiesJsonElement">
            <summary>Sets the shim of CertificateContact.Azure.Security.KeyVault.IJsonDeserializable.ReadProperties(CertificateContact this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContact.AllInstances.AzureSecurityKeyVaultIJsonSerializableWritePropertiesUtf8JsonWriter">
            <summary>Sets the shim of CertificateContact.Azure.Security.KeyVault.IJsonSerializable.WriteProperties(CertificateContact this, Utf8JsonWriter json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContact.AllInstances.EmailGet">
            <summary>Sets the shim of CertificateContact.get_Email(CertificateContact this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContact.AllInstances.EmailSetString">
            <summary>Sets the shim of CertificateContact.set_Email(CertificateContact this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContact.AllInstances.NameGet">
            <summary>Sets the shim of CertificateContact.get_Name(CertificateContact this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContact.AllInstances.NameSetString">
            <summary>Sets the shim of CertificateContact.set_Name(CertificateContact this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContact.AllInstances.PhoneGet">
            <summary>Sets the shim of CertificateContact.get_Phone(CertificateContact this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContact.AllInstances.PhoneSetString">
            <summary>Sets the shim of CertificateContact.set_Phone(CertificateContact this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContact.AzureSecurityKeyVaultIJsonDeserializableReadPropertiesJsonElement">
            <summary>Sets the shim of CertificateContact.Azure.Security.KeyVault.IJsonDeserializable.ReadProperties(CertificateContact this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContact.AzureSecurityKeyVaultIJsonSerializableWritePropertiesUtf8JsonWriter">
            <summary>Sets the shim of CertificateContact.Azure.Security.KeyVault.IJsonSerializable.WriteProperties(CertificateContact this, Utf8JsonWriter json)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContact.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContact.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContact.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContact.Constructor">
            <summary>Sets the shim of CertificateContact.CertificateContact(CertificateContact this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContact.EmailGet">
            <summary>Sets the shim of CertificateContact.get_Email(CertificateContact this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContact.EmailSetString">
            <summary>Sets the shim of CertificateContact.set_Email(CertificateContact this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContact.NameGet">
            <summary>Sets the shim of CertificateContact.get_Name(CertificateContact this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContact.NameSetString">
            <summary>Sets the shim of CertificateContact.set_Name(CertificateContact this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContact.PhoneGet">
            <summary>Sets the shim of CertificateContact.get_Phone(CertificateContact this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContact.PhoneSetString">
            <summary>Sets the shim of CertificateContact.set_Phone(CertificateContact this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContact.StaticConstructor">
            <summary>Sets the shim of CertificateContact.CertificateContact()</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContentType">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.CertificateContentType</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContentType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContentType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContentType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContentType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContentType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContentType.EqualityOpCertificateContentTypeCertificateContentType">
            <summary>Sets the shim of CertificateContentType.op_Equality(CertificateContentType left, CertificateContentType right)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContentType.ImplicitOpStringCertificateContentType">
            <summary>Sets the shim of CertificateContentType.op_Implicit(String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContentType.InequalityOpCertificateContentTypeCertificateContentType">
            <summary>Sets the shim of CertificateContentType.op_Inequality(CertificateContentType left, CertificateContentType right)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContentType.PemGet">
            <summary>Sets the shim of CertificateContentType.get_Pem()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContentType.Pkcs12Get">
            <summary>Sets the shim of CertificateContentType.get_Pkcs12()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateContentType.StaticConstructor">
            <summary>Sets the shim of CertificateContentType.CertificateContentType()</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.CertificateIssuer</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.#ctor(Azure.Security.KeyVault.Certificates.CertificateIssuer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AccountIdGet">
            <summary>Sets the shim of CertificateIssuer.get_AccountId(CertificateIssuer this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AccountIdSetString">
            <summary>Sets the shim of CertificateIssuer.set_AccountId(CertificateIssuer this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AdministratorContactsGet">
            <summary>Sets the shim of CertificateIssuer.get_AdministratorContacts(CertificateIssuer this)</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AllInstances.AccountIdGet">
            <summary>Sets the shim of CertificateIssuer.get_AccountId(CertificateIssuer this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AllInstances.AccountIdSetString">
            <summary>Sets the shim of CertificateIssuer.set_AccountId(CertificateIssuer this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AllInstances.AdministratorContactsGet">
            <summary>Sets the shim of CertificateIssuer.get_AdministratorContacts(CertificateIssuer this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AllInstances.AzureSecurityKeyVaultIJsonDeserializableReadPropertiesJsonElement">
            <summary>Sets the shim of CertificateIssuer.Azure.Security.KeyVault.IJsonDeserializable.ReadProperties(CertificateIssuer this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AllInstances.AzureSecurityKeyVaultIJsonSerializableWritePropertiesUtf8JsonWriter">
            <summary>Sets the shim of CertificateIssuer.Azure.Security.KeyVault.IJsonSerializable.WriteProperties(CertificateIssuer this, Utf8JsonWriter json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AllInstances.CreatedOnGet">
            <summary>Sets the shim of CertificateIssuer.get_CreatedOn(CertificateIssuer this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AllInstances.CreatedOnSetNullableOfDateTimeOffset">
            <summary>Sets the shim of CertificateIssuer.set_CreatedOn(CertificateIssuer this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AllInstances.EnabledGet">
            <summary>Sets the shim of CertificateIssuer.get_Enabled(CertificateIssuer this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AllInstances.EnabledSetNullableOfBoolean">
            <summary>Sets the shim of CertificateIssuer.set_Enabled(CertificateIssuer this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AllInstances.IdGet">
            <summary>Sets the shim of CertificateIssuer.get_Id(CertificateIssuer this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AllInstances.NameGet">
            <summary>Sets the shim of CertificateIssuer.get_Name(CertificateIssuer this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AllInstances.OrganizationIdGet">
            <summary>Sets the shim of CertificateIssuer.get_OrganizationId(CertificateIssuer this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AllInstances.OrganizationIdSetString">
            <summary>Sets the shim of CertificateIssuer.set_OrganizationId(CertificateIssuer this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AllInstances.PasswordGet">
            <summary>Sets the shim of CertificateIssuer.get_Password(CertificateIssuer this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AllInstances.PasswordSetString">
            <summary>Sets the shim of CertificateIssuer.set_Password(CertificateIssuer this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AllInstances.ProviderGet">
            <summary>Sets the shim of CertificateIssuer.get_Provider(CertificateIssuer this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AllInstances.ReadAttributePropertiesJsonElement">
            <summary>Sets the shim of CertificateIssuer.ReadAttributeProperties(CertificateIssuer this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AllInstances.ReadCredentialsPropertiesJsonElement">
            <summary>Sets the shim of CertificateIssuer.ReadCredentialsProperties(CertificateIssuer this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AllInstances.ReadOrgDetailsPropertiesJsonElement">
            <summary>Sets the shim of CertificateIssuer.ReadOrgDetailsProperties(CertificateIssuer this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AllInstances.ReadPropertyJsonProperty">
            <summary>Sets the shim of CertificateIssuer.ReadProperty(CertificateIssuer this, JsonProperty prop)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AllInstances.UpdatedOnGet">
            <summary>Sets the shim of CertificateIssuer.get_UpdatedOn(CertificateIssuer this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AllInstances.UpdatedOnSetNullableOfDateTimeOffset">
            <summary>Sets the shim of CertificateIssuer.set_UpdatedOn(CertificateIssuer this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AllInstances.WriteCredentialsPropertiesUtf8JsonWriter">
            <summary>Sets the shim of CertificateIssuer.WriteCredentialsProperties(CertificateIssuer this, Utf8JsonWriter json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AllInstances.WriteOrgDetailsPropertiesUtf8JsonWriter">
            <summary>Sets the shim of CertificateIssuer.WriteOrgDetailsProperties(CertificateIssuer this, Utf8JsonWriter json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AllInstances.WritePropertiesUtf8JsonWriter">
            <summary>Sets the shim of CertificateIssuer.WriteProperties(CertificateIssuer this, Utf8JsonWriter json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AzureSecurityKeyVaultIJsonDeserializableReadPropertiesJsonElement">
            <summary>Sets the shim of CertificateIssuer.Azure.Security.KeyVault.IJsonDeserializable.ReadProperties(CertificateIssuer this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.AzureSecurityKeyVaultIJsonSerializableWritePropertiesUtf8JsonWriter">
            <summary>Sets the shim of CertificateIssuer.Azure.Security.KeyVault.IJsonSerializable.WriteProperties(CertificateIssuer this, Utf8JsonWriter json)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.ConstructorIssuerProperties">
            <summary>Sets the shim of CertificateIssuer.CertificateIssuer(CertificateIssuer this, IssuerProperties properties)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.ConstructorString">
            <summary>Sets the shim of CertificateIssuer.CertificateIssuer(CertificateIssuer this, String name)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.ConstructorStringString">
            <summary>Sets the shim of CertificateIssuer.CertificateIssuer(CertificateIssuer this, String name, String provider)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.CreatedOnGet">
            <summary>Sets the shim of CertificateIssuer.get_CreatedOn(CertificateIssuer this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.CreatedOnSetNullableOfDateTimeOffset">
            <summary>Sets the shim of CertificateIssuer.set_CreatedOn(CertificateIssuer this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.EnabledGet">
            <summary>Sets the shim of CertificateIssuer.get_Enabled(CertificateIssuer this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.EnabledSetNullableOfBoolean">
            <summary>Sets the shim of CertificateIssuer.set_Enabled(CertificateIssuer this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.IdGet">
            <summary>Sets the shim of CertificateIssuer.get_Id(CertificateIssuer this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.NameGet">
            <summary>Sets the shim of CertificateIssuer.get_Name(CertificateIssuer this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.OrganizationIdGet">
            <summary>Sets the shim of CertificateIssuer.get_OrganizationId(CertificateIssuer this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.OrganizationIdSetString">
            <summary>Sets the shim of CertificateIssuer.set_OrganizationId(CertificateIssuer this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.PasswordGet">
            <summary>Sets the shim of CertificateIssuer.get_Password(CertificateIssuer this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.PasswordSetString">
            <summary>Sets the shim of CertificateIssuer.set_Password(CertificateIssuer this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.ProviderGet">
            <summary>Sets the shim of CertificateIssuer.get_Provider(CertificateIssuer this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.ReadAttributePropertiesJsonElement">
            <summary>Sets the shim of CertificateIssuer.ReadAttributeProperties(CertificateIssuer this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.ReadCredentialsPropertiesJsonElement">
            <summary>Sets the shim of CertificateIssuer.ReadCredentialsProperties(CertificateIssuer this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.ReadOrgDetailsPropertiesJsonElement">
            <summary>Sets the shim of CertificateIssuer.ReadOrgDetailsProperties(CertificateIssuer this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.ReadPropertyJsonProperty">
            <summary>Sets the shim of CertificateIssuer.ReadProperty(CertificateIssuer this, JsonProperty prop)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.StaticConstructor">
            <summary>Sets the shim of CertificateIssuer.CertificateIssuer()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.UpdatedOnGet">
            <summary>Sets the shim of CertificateIssuer.get_UpdatedOn(CertificateIssuer this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.UpdatedOnSetNullableOfDateTimeOffset">
            <summary>Sets the shim of CertificateIssuer.set_UpdatedOn(CertificateIssuer this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.WriteCredentialsPropertiesUtf8JsonWriter">
            <summary>Sets the shim of CertificateIssuer.WriteCredentialsProperties(CertificateIssuer this, Utf8JsonWriter json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.WriteOrgDetailsPropertiesUtf8JsonWriter">
            <summary>Sets the shim of CertificateIssuer.WriteOrgDetailsProperties(CertificateIssuer this, Utf8JsonWriter json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateIssuer.WritePropertiesUtf8JsonWriter">
            <summary>Sets the shim of CertificateIssuer.WriteProperties(CertificateIssuer this, Utf8JsonWriter json)</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyCurveName">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.CertificateKeyCurveName</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyCurveName.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyCurveName.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyCurveName.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyCurveName.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyCurveName.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyCurveName.EqualityOpCertificateKeyCurveNameCertificateKeyCurveName">
            <summary>Sets the shim of CertificateKeyCurveName.op_Equality(CertificateKeyCurveName left, CertificateKeyCurveName right)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyCurveName.ImplicitOpStringCertificateKeyCurveName">
            <summary>Sets the shim of CertificateKeyCurveName.op_Implicit(String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyCurveName.InequalityOpCertificateKeyCurveNameCertificateKeyCurveName">
            <summary>Sets the shim of CertificateKeyCurveName.op_Inequality(CertificateKeyCurveName left, CertificateKeyCurveName right)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyCurveName.P256Get">
            <summary>Sets the shim of CertificateKeyCurveName.get_P256()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyCurveName.P256KGet">
            <summary>Sets the shim of CertificateKeyCurveName.get_P256K()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyCurveName.P384Get">
            <summary>Sets the shim of CertificateKeyCurveName.get_P384()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyCurveName.P521Get">
            <summary>Sets the shim of CertificateKeyCurveName.get_P521()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyCurveName.StaticConstructor">
            <summary>Sets the shim of CertificateKeyCurveName.CertificateKeyCurveName()</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyType">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.CertificateKeyType</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyType.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyType.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyType.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyType.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyType.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyType.EcGet">
            <summary>Sets the shim of CertificateKeyType.get_Ec()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyType.EcHsmGet">
            <summary>Sets the shim of CertificateKeyType.get_EcHsm()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyType.EqualityOpCertificateKeyTypeCertificateKeyType">
            <summary>Sets the shim of CertificateKeyType.op_Equality(CertificateKeyType left, CertificateKeyType right)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyType.ImplicitOpStringCertificateKeyType">
            <summary>Sets the shim of CertificateKeyType.op_Implicit(String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyType.InequalityOpCertificateKeyTypeCertificateKeyType">
            <summary>Sets the shim of CertificateKeyType.op_Inequality(CertificateKeyType left, CertificateKeyType right)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyType.RsaGet">
            <summary>Sets the shim of CertificateKeyType.get_Rsa()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyType.RsaHsmGet">
            <summary>Sets the shim of CertificateKeyType.get_RsaHsm()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyType.StaticConstructor">
            <summary>Sets the shim of CertificateKeyType.CertificateKeyType()</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyUsage">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.CertificateKeyUsage</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyUsage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyUsage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyUsage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyUsage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyUsage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyUsage.CrlSignGet">
            <summary>Sets the shim of CertificateKeyUsage.get_CrlSign()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyUsage.DataEnciphermentGet">
            <summary>Sets the shim of CertificateKeyUsage.get_DataEncipherment()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyUsage.DecipherOnlyGet">
            <summary>Sets the shim of CertificateKeyUsage.get_DecipherOnly()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyUsage.DigitalSignatureGet">
            <summary>Sets the shim of CertificateKeyUsage.get_DigitalSignature()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyUsage.EncipherOnlyGet">
            <summary>Sets the shim of CertificateKeyUsage.get_EncipherOnly()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyUsage.EqualityOpCertificateKeyUsageCertificateKeyUsage">
            <summary>Sets the shim of CertificateKeyUsage.op_Equality(CertificateKeyUsage left, CertificateKeyUsage right)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyUsage.ImplicitOpStringCertificateKeyUsage">
            <summary>Sets the shim of CertificateKeyUsage.op_Implicit(String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyUsage.InequalityOpCertificateKeyUsageCertificateKeyUsage">
            <summary>Sets the shim of CertificateKeyUsage.op_Inequality(CertificateKeyUsage left, CertificateKeyUsage right)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyUsage.KeyAgreementGet">
            <summary>Sets the shim of CertificateKeyUsage.get_KeyAgreement()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyUsage.KeyCertSignGet">
            <summary>Sets the shim of CertificateKeyUsage.get_KeyCertSign()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyUsage.KeyEnciphermentGet">
            <summary>Sets the shim of CertificateKeyUsage.get_KeyEncipherment()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyUsage.NonRepudiationGet">
            <summary>Sets the shim of CertificateKeyUsage.get_NonRepudiation()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateKeyUsage.StaticConstructor">
            <summary>Sets the shim of CertificateKeyUsage.CertificateKeyUsage()</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateModelFactory">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.CertificateModelFactory</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateModelFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateModelFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateModelFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateModelFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateModelFactory.CertificateIssuerIssuerPropertiesNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of CertificateModelFactory.CertificateIssuer(IssuerProperties properties, Nullable`1 createdOn, Nullable`1 updatedOn)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateModelFactory.CertificateOperationErrorStringStringCertificateOperationError">
            <summary>Sets the shim of CertificateModelFactory.CertificateOperationError(String code, String message, CertificateOperationError innerError)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateModelFactory.CertificateOperationPropertiesUriStringUriStringStringNullableOfBooleanByteArrayBooleanStringStringStringStringCertificateOperationError">
            <summary>Sets the shim of CertificateModelFactory.CertificateOperationProperties(Uri id, String name, Uri vaultUri, String issuerName, String certificateType, Nullable`1 certificateTransparency, Byte[] csr, Boolean cancellationRequested, String requestId, String status, String statusDetails, String target, CertificateOperationError error)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateModelFactory.CertificatePolicyStringSubjectAlternativeNamesStringNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of CertificateModelFactory.CertificatePolicy(String subject, SubjectAlternativeNames subjectAlternativeNames, String issuerName, Nullable`1 createdOn, Nullable`1 updatedOn)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateModelFactory.CertificatePropertiesUriStringUriStringByteArrayNullableOfDateTimeOffsetNullableOfDateTimeOffsetNullableOfDateTimeOffsetNullableOfDateTimeOffsetString">
            <summary>Sets the shim of CertificateModelFactory.CertificateProperties(Uri id, String name, Uri vaultUri, String version, Byte[] x509thumbprint, Nullable`1 notBefore, Nullable`1 expiresOn, Nullable`1 createdOn, Nullable`1 updatedOn, String recoveryLevel)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateModelFactory.CertificatePropertiesUriStringUriStringByteArrayNullableOfDateTimeOffsetNullableOfDateTimeOffsetNullableOfDateTimeOffsetNullableOfDateTimeOffsetStringNullableOfInt32">
            <summary>Sets the shim of CertificateModelFactory.CertificateProperties(Uri id, String name, Uri vaultUri, String version, Byte[] x509thumbprint, Nullable`1 notBefore, Nullable`1 expiresOn, Nullable`1 createdOn, Nullable`1 updatedOn, String recoveryLevel, Nullable`1 recoverableDays)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateModelFactory.DeletedCertificateCertificatePropertiesUriUriByteArrayCertificatePolicyUriNullableOfDateTimeOffsetNullableOfDateTimeOffset">
            <summary>Sets the shim of CertificateModelFactory.DeletedCertificate(CertificateProperties properties, Uri keyId, Uri secretId, Byte[] cer, CertificatePolicy policy, Uri recoveryId, Nullable`1 deletedOn, Nullable`1 scheduledPurgeDate)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateModelFactory.IssuerPropertiesUriString">
            <summary>Sets the shim of CertificateModelFactory.IssuerProperties(Uri id, String name)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateModelFactory.KeyVaultCertificateCertificatePropertiesUriUriByteArray">
            <summary>Sets the shim of CertificateModelFactory.KeyVaultCertificate(CertificateProperties properties, Uri keyId, Uri secretId, Byte[] cer)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateModelFactory.KeyVaultCertificateWithPolicyCertificatePropertiesUriUriByteArrayCertificatePolicy">
            <summary>Sets the shim of CertificateModelFactory.KeyVaultCertificateWithPolicy(CertificateProperties properties, Uri keyId, Uri secretId, Byte[] cer, CertificatePolicy policy)</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.CertificateOperation</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.#ctor(Azure.Security.KeyVault.Certificates.CertificateOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.AllInstances.CancelAsyncCancellationToken">
            <summary>Sets the shim of CertificateOperation.CancelAsync(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.AllInstances.CancelCancellationToken">
            <summary>Sets the shim of CertificateOperation.Cancel(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.AllInstances.DeleteAsyncCancellationToken">
            <summary>Sets the shim of CertificateOperation.DeleteAsync(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.AllInstances.DeleteCancellationToken">
            <summary>Sets the shim of CertificateOperation.Delete(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.AllInstances.GetRawResponse">
            <summary>Sets the shim of CertificateOperation.GetRawResponse(CertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.AllInstances.HasCompletedGet">
            <summary>Sets the shim of CertificateOperation.get_HasCompleted(CertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.AllInstances.HasValueGet">
            <summary>Sets the shim of CertificateOperation.get_HasValue(CertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.AllInstances.IdGet">
            <summary>Sets the shim of CertificateOperation.get_Id(CertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.AllInstances.PropertiesGet">
            <summary>Sets the shim of CertificateOperation.get_Properties(CertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.AllInstances.PropertiesSetCertificateOperationProperties">
            <summary>Sets the shim of CertificateOperation.set_Properties(CertificateOperation this, CertificateOperationProperties value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.AllInstances.UpdateStatusAsyncCancellationToken">
            <summary>Sets the shim of CertificateOperation.UpdateStatusAsync(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.AllInstances.UpdateStatusCancellationToken">
            <summary>Sets the shim of CertificateOperation.UpdateStatus(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.AllInstances.ValueGet">
            <summary>Sets the shim of CertificateOperation.get_Value(CertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.AllInstances.WaitForCompletionAsyncCancellationToken">
            <summary>Sets the shim of CertificateOperation.WaitForCompletionAsync(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.AllInstances.WaitForCompletionAsyncTimeSpanCancellationToken">
            <summary>Sets the shim of CertificateOperation.WaitForCompletionAsync(CertificateOperation this, TimeSpan pollingInterval, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.CancelAsyncCancellationToken">
            <summary>Sets the shim of CertificateOperation.CancelAsync(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.CancelCancellationToken">
            <summary>Sets the shim of CertificateOperation.Cancel(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.ConstructorCertificateClientString">
            <summary>Sets the shim of CertificateOperation.CertificateOperation(CertificateOperation this, CertificateClient client, String name)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.ConstructorResponseOfCertificateOperationPropertiesCertificateClient">
            <summary>Sets the shim of CertificateOperation.CertificateOperation(CertificateOperation this, Response`1 properties, CertificateClient client)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.DeleteAsyncCancellationToken">
            <summary>Sets the shim of CertificateOperation.DeleteAsync(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.DeleteCancellationToken">
            <summary>Sets the shim of CertificateOperation.Delete(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.GetRawResponse">
            <summary>Sets the shim of CertificateOperation.GetRawResponse(CertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.HasCompletedGet">
            <summary>Sets the shim of CertificateOperation.get_HasCompleted(CertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.HasValueGet">
            <summary>Sets the shim of CertificateOperation.get_HasValue(CertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.IdGet">
            <summary>Sets the shim of CertificateOperation.get_Id(CertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.PropertiesGet">
            <summary>Sets the shim of CertificateOperation.get_Properties(CertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.PropertiesSetCertificateOperationProperties">
            <summary>Sets the shim of CertificateOperation.set_Properties(CertificateOperation this, CertificateOperationProperties value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.UpdateStatusAsyncCancellationToken">
            <summary>Sets the shim of CertificateOperation.UpdateStatusAsync(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.UpdateStatusCancellationToken">
            <summary>Sets the shim of CertificateOperation.UpdateStatus(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.ValueGet">
            <summary>Sets the shim of CertificateOperation.get_Value(CertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.WaitForCompletionAsyncCancellationToken">
            <summary>Sets the shim of CertificateOperation.WaitForCompletionAsync(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperation.WaitForCompletionAsyncTimeSpanCancellationToken">
            <summary>Sets the shim of CertificateOperation.WaitForCompletionAsync(CertificateOperation this, TimeSpan pollingInterval, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationError">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.CertificateOperationError</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationError.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationError.#ctor(Azure.Security.KeyVault.Certificates.CertificateOperationError)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationError.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationError.AllInstances.AzureSecurityKeyVaultIJsonDeserializableReadPropertiesJsonElement">
            <summary>Sets the shim of CertificateOperationError.Azure.Security.KeyVault.IJsonDeserializable.ReadProperties(CertificateOperationError this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationError.AllInstances.CodeGet">
            <summary>Sets the shim of CertificateOperationError.get_Code(CertificateOperationError this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationError.AllInstances.CodeSetString">
            <summary>Sets the shim of CertificateOperationError.set_Code(CertificateOperationError this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationError.AllInstances.InnerErrorGet">
            <summary>Sets the shim of CertificateOperationError.get_InnerError(CertificateOperationError this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationError.AllInstances.InnerErrorSetCertificateOperationError">
            <summary>Sets the shim of CertificateOperationError.set_InnerError(CertificateOperationError this, CertificateOperationError value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationError.AllInstances.MessageGet">
            <summary>Sets the shim of CertificateOperationError.get_Message(CertificateOperationError this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationError.AllInstances.MessageSetString">
            <summary>Sets the shim of CertificateOperationError.set_Message(CertificateOperationError this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationError.AzureSecurityKeyVaultIJsonDeserializableReadPropertiesJsonElement">
            <summary>Sets the shim of CertificateOperationError.Azure.Security.KeyVault.IJsonDeserializable.ReadProperties(CertificateOperationError this, JsonElement json)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationError.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationError.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationError.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationError.CodeGet">
            <summary>Sets the shim of CertificateOperationError.get_Code(CertificateOperationError this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationError.CodeSetString">
            <summary>Sets the shim of CertificateOperationError.set_Code(CertificateOperationError this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationError.Constructor">
            <summary>Sets the shim of CertificateOperationError.CertificateOperationError(CertificateOperationError this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationError.InnerErrorGet">
            <summary>Sets the shim of CertificateOperationError.get_InnerError(CertificateOperationError this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationError.InnerErrorSetCertificateOperationError">
            <summary>Sets the shim of CertificateOperationError.set_InnerError(CertificateOperationError this, CertificateOperationError value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationError.MessageGet">
            <summary>Sets the shim of CertificateOperationError.get_Message(CertificateOperationError this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationError.MessageSetString">
            <summary>Sets the shim of CertificateOperationError.set_Message(CertificateOperationError this, String value)</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.CertificateOperationProperties</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.#ctor(Azure.Security.KeyVault.Certificates.CertificateOperationProperties)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.AzureSecurityKeyVaultIJsonDeserializableReadPropertiesJsonElement">
            <summary>Sets the shim of CertificateOperationProperties.Azure.Security.KeyVault.IJsonDeserializable.ReadProperties(CertificateOperationProperties this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.CancellationRequestedGet">
            <summary>Sets the shim of CertificateOperationProperties.get_CancellationRequested(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.CancellationRequestedSetBoolean">
            <summary>Sets the shim of CertificateOperationProperties.set_CancellationRequested(CertificateOperationProperties this, Boolean value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.CertificateTransparencyGet">
            <summary>Sets the shim of CertificateOperationProperties.get_CertificateTransparency(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.CertificateTransparencySetNullableOfBoolean">
            <summary>Sets the shim of CertificateOperationProperties.set_CertificateTransparency(CertificateOperationProperties this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.CertificateTypeGet">
            <summary>Sets the shim of CertificateOperationProperties.get_CertificateType(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.CertificateTypeSetString">
            <summary>Sets the shim of CertificateOperationProperties.set_CertificateType(CertificateOperationProperties this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.CsrGet">
            <summary>Sets the shim of CertificateOperationProperties.get_Csr(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.CsrSetByteArray">
            <summary>Sets the shim of CertificateOperationProperties.set_Csr(CertificateOperationProperties this, Byte[] value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.ErrorGet">
            <summary>Sets the shim of CertificateOperationProperties.get_Error(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.ErrorSetCertificateOperationError">
            <summary>Sets the shim of CertificateOperationProperties.set_Error(CertificateOperationProperties this, CertificateOperationError value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.IdGet">
            <summary>Sets the shim of CertificateOperationProperties.get_Id(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.IdSetUri">
            <summary>Sets the shim of CertificateOperationProperties.set_Id(CertificateOperationProperties this, Uri value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.IssuerNameGet">
            <summary>Sets the shim of CertificateOperationProperties.get_IssuerName(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.IssuerNameSetString">
            <summary>Sets the shim of CertificateOperationProperties.set_IssuerName(CertificateOperationProperties this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.NameGet">
            <summary>Sets the shim of CertificateOperationProperties.get_Name(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.NameSetString">
            <summary>Sets the shim of CertificateOperationProperties.set_Name(CertificateOperationProperties this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.ParseIdUri">
            <summary>Sets the shim of CertificateOperationProperties.ParseId(CertificateOperationProperties this, Uri idToParse)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.RequestIdGet">
            <summary>Sets the shim of CertificateOperationProperties.get_RequestId(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.RequestIdSetString">
            <summary>Sets the shim of CertificateOperationProperties.set_RequestId(CertificateOperationProperties this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.StatusDetailsGet">
            <summary>Sets the shim of CertificateOperationProperties.get_StatusDetails(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.StatusDetailsSetString">
            <summary>Sets the shim of CertificateOperationProperties.set_StatusDetails(CertificateOperationProperties this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.StatusGet">
            <summary>Sets the shim of CertificateOperationProperties.get_Status(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.StatusSetString">
            <summary>Sets the shim of CertificateOperationProperties.set_Status(CertificateOperationProperties this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.TargetGet">
            <summary>Sets the shim of CertificateOperationProperties.get_Target(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.TargetSetString">
            <summary>Sets the shim of CertificateOperationProperties.set_Target(CertificateOperationProperties this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.VaultUriGet">
            <summary>Sets the shim of CertificateOperationProperties.get_VaultUri(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AllInstances.VaultUriSetUri">
            <summary>Sets the shim of CertificateOperationProperties.set_VaultUri(CertificateOperationProperties this, Uri value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.AzureSecurityKeyVaultIJsonDeserializableReadPropertiesJsonElement">
            <summary>Sets the shim of CertificateOperationProperties.Azure.Security.KeyVault.IJsonDeserializable.ReadProperties(CertificateOperationProperties this, JsonElement json)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.CancellationRequestedGet">
            <summary>Sets the shim of CertificateOperationProperties.get_CancellationRequested(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.CancellationRequestedSetBoolean">
            <summary>Sets the shim of CertificateOperationProperties.set_CancellationRequested(CertificateOperationProperties this, Boolean value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.CertificateTransparencyGet">
            <summary>Sets the shim of CertificateOperationProperties.get_CertificateTransparency(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.CertificateTransparencySetNullableOfBoolean">
            <summary>Sets the shim of CertificateOperationProperties.set_CertificateTransparency(CertificateOperationProperties this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.CertificateTypeGet">
            <summary>Sets the shim of CertificateOperationProperties.get_CertificateType(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.CertificateTypeSetString">
            <summary>Sets the shim of CertificateOperationProperties.set_CertificateType(CertificateOperationProperties this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.Constructor">
            <summary>Sets the shim of CertificateOperationProperties.CertificateOperationProperties(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.ConstructorUriString">
            <summary>Sets the shim of CertificateOperationProperties.CertificateOperationProperties(CertificateOperationProperties this, Uri vaultUri, String name)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.CsrGet">
            <summary>Sets the shim of CertificateOperationProperties.get_Csr(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.CsrSetByteArray">
            <summary>Sets the shim of CertificateOperationProperties.set_Csr(CertificateOperationProperties this, Byte[] value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.ErrorGet">
            <summary>Sets the shim of CertificateOperationProperties.get_Error(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.ErrorSetCertificateOperationError">
            <summary>Sets the shim of CertificateOperationProperties.set_Error(CertificateOperationProperties this, CertificateOperationError value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.IdGet">
            <summary>Sets the shim of CertificateOperationProperties.get_Id(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.IdSetUri">
            <summary>Sets the shim of CertificateOperationProperties.set_Id(CertificateOperationProperties this, Uri value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.IssuerNameGet">
            <summary>Sets the shim of CertificateOperationProperties.get_IssuerName(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.IssuerNameSetString">
            <summary>Sets the shim of CertificateOperationProperties.set_IssuerName(CertificateOperationProperties this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.NameGet">
            <summary>Sets the shim of CertificateOperationProperties.get_Name(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.NameSetString">
            <summary>Sets the shim of CertificateOperationProperties.set_Name(CertificateOperationProperties this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.ParseIdUri">
            <summary>Sets the shim of CertificateOperationProperties.ParseId(CertificateOperationProperties this, Uri idToParse)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.RequestIdGet">
            <summary>Sets the shim of CertificateOperationProperties.get_RequestId(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.RequestIdSetString">
            <summary>Sets the shim of CertificateOperationProperties.set_RequestId(CertificateOperationProperties this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.StatusDetailsGet">
            <summary>Sets the shim of CertificateOperationProperties.get_StatusDetails(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.StatusDetailsSetString">
            <summary>Sets the shim of CertificateOperationProperties.set_StatusDetails(CertificateOperationProperties this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.StatusGet">
            <summary>Sets the shim of CertificateOperationProperties.get_Status(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.StatusSetString">
            <summary>Sets the shim of CertificateOperationProperties.set_Status(CertificateOperationProperties this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.TargetGet">
            <summary>Sets the shim of CertificateOperationProperties.get_Target(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.TargetSetString">
            <summary>Sets the shim of CertificateOperationProperties.set_Target(CertificateOperationProperties this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.VaultUriGet">
            <summary>Sets the shim of CertificateOperationProperties.get_VaultUri(CertificateOperationProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateOperationProperties.VaultUriSetUri">
            <summary>Sets the shim of CertificateOperationProperties.set_VaultUri(CertificateOperationProperties this, Uri value)</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.CertificatePolicy</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.#ctor(Azure.Security.KeyVault.Certificates.CertificatePolicy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.AzureSecurityKeyVaultIJsonDeserializableReadPropertiesJsonElement">
            <summary>Sets the shim of CertificatePolicy.Azure.Security.KeyVault.IJsonDeserializable.ReadProperties(CertificatePolicy this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.AzureSecurityKeyVaultIJsonSerializableWritePropertiesUtf8JsonWriter">
            <summary>Sets the shim of CertificatePolicy.Azure.Security.KeyVault.IJsonSerializable.WriteProperties(CertificatePolicy this, Utf8JsonWriter json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.CertificateTransparencyGet">
            <summary>Sets the shim of CertificatePolicy.get_CertificateTransparency(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.CertificateTransparencySetNullableOfBoolean">
            <summary>Sets the shim of CertificatePolicy.set_CertificateTransparency(CertificatePolicy this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.CertificateTypeGet">
            <summary>Sets the shim of CertificatePolicy.get_CertificateType(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.CertificateTypeSetString">
            <summary>Sets the shim of CertificatePolicy.set_CertificateType(CertificatePolicy this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.ContentTypeGet">
            <summary>Sets the shim of CertificatePolicy.get_ContentType(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.ContentTypeSetNullableOfCertificateContentType">
            <summary>Sets the shim of CertificatePolicy.set_ContentType(CertificatePolicy this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.CreatedOnGet">
            <summary>Sets the shim of CertificatePolicy.get_CreatedOn(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.CreatedOnSetNullableOfDateTimeOffset">
            <summary>Sets the shim of CertificatePolicy.set_CreatedOn(CertificatePolicy this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.EnabledGet">
            <summary>Sets the shim of CertificatePolicy.get_Enabled(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.EnabledSetNullableOfBoolean">
            <summary>Sets the shim of CertificatePolicy.set_Enabled(CertificatePolicy this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.EnhancedKeyUsageGet">
            <summary>Sets the shim of CertificatePolicy.get_EnhancedKeyUsage(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.ExportableGet">
            <summary>Sets the shim of CertificatePolicy.get_Exportable(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.ExportableSetNullableOfBoolean">
            <summary>Sets the shim of CertificatePolicy.set_Exportable(CertificatePolicy this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.IssuerNameGet">
            <summary>Sets the shim of CertificatePolicy.get_IssuerName(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.IssuerNameSetString">
            <summary>Sets the shim of CertificatePolicy.set_IssuerName(CertificatePolicy this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.KeyCurveNameGet">
            <summary>Sets the shim of CertificatePolicy.get_KeyCurveName(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.KeyCurveNameSetNullableOfCertificateKeyCurveName">
            <summary>Sets the shim of CertificatePolicy.set_KeyCurveName(CertificatePolicy this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.KeySizeGet">
            <summary>Sets the shim of CertificatePolicy.get_KeySize(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.KeySizeSetNullableOfInt32">
            <summary>Sets the shim of CertificatePolicy.set_KeySize(CertificatePolicy this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.KeyTypeGet">
            <summary>Sets the shim of CertificatePolicy.get_KeyType(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.KeyTypeSetNullableOfCertificateKeyType">
            <summary>Sets the shim of CertificatePolicy.set_KeyType(CertificatePolicy this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.KeyUsageGet">
            <summary>Sets the shim of CertificatePolicy.get_KeyUsage(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.LifetimeActionsGet">
            <summary>Sets the shim of CertificatePolicy.get_LifetimeActions(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.ReadAttributesPropertiesJsonElement">
            <summary>Sets the shim of CertificatePolicy.ReadAttributesProperties(CertificatePolicy this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.ReadKeyPropertiesJsonElement">
            <summary>Sets the shim of CertificatePolicy.ReadKeyProperties(CertificatePolicy this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.ReadSecretPropertiesJsonElement">
            <summary>Sets the shim of CertificatePolicy.ReadSecretProperties(CertificatePolicy this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.ReadX509CertificatePropertiesJsonElement">
            <summary>Sets the shim of CertificatePolicy.ReadX509CertificateProperties(CertificatePolicy this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.ReuseKeyGet">
            <summary>Sets the shim of CertificatePolicy.get_ReuseKey(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.ReuseKeySetNullableOfBoolean">
            <summary>Sets the shim of CertificatePolicy.set_ReuseKey(CertificatePolicy this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.SubjectAlternativeNamesGet">
            <summary>Sets the shim of CertificatePolicy.get_SubjectAlternativeNames(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.SubjectAlternativeNamesSetSubjectAlternativeNames">
            <summary>Sets the shim of CertificatePolicy.set_SubjectAlternativeNames(CertificatePolicy this, SubjectAlternativeNames value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.SubjectGet">
            <summary>Sets the shim of CertificatePolicy.get_Subject(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.SubjectSetString">
            <summary>Sets the shim of CertificatePolicy.set_Subject(CertificatePolicy this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.UpdatedOnGet">
            <summary>Sets the shim of CertificatePolicy.get_UpdatedOn(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.UpdatedOnSetNullableOfDateTimeOffset">
            <summary>Sets the shim of CertificatePolicy.set_UpdatedOn(CertificatePolicy this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.ValidityInMonthsGet">
            <summary>Sets the shim of CertificatePolicy.get_ValidityInMonths(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.ValidityInMonthsSetNullableOfInt32">
            <summary>Sets the shim of CertificatePolicy.set_ValidityInMonths(CertificatePolicy this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.WriteAttributesPropertiesUtf8JsonWriter">
            <summary>Sets the shim of CertificatePolicy.WriteAttributesProperties(CertificatePolicy this, Utf8JsonWriter json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.WriteKeyPropertiesUtf8JsonWriter">
            <summary>Sets the shim of CertificatePolicy.WriteKeyProperties(CertificatePolicy this, Utf8JsonWriter json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.WriteSecretPropertiesUtf8JsonWriter">
            <summary>Sets the shim of CertificatePolicy.WriteSecretProperties(CertificatePolicy this, Utf8JsonWriter json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AllInstances.WriteX509CertificatePropertiesUtf8JsonWriter">
            <summary>Sets the shim of CertificatePolicy.WriteX509CertificateProperties(CertificatePolicy this, Utf8JsonWriter json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AzureSecurityKeyVaultIJsonDeserializableReadPropertiesJsonElement">
            <summary>Sets the shim of CertificatePolicy.Azure.Security.KeyVault.IJsonDeserializable.ReadProperties(CertificatePolicy this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.AzureSecurityKeyVaultIJsonSerializableWritePropertiesUtf8JsonWriter">
            <summary>Sets the shim of CertificatePolicy.Azure.Security.KeyVault.IJsonSerializable.WriteProperties(CertificatePolicy this, Utf8JsonWriter json)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.CertificateTransparencyGet">
            <summary>Sets the shim of CertificatePolicy.get_CertificateTransparency(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.CertificateTransparencySetNullableOfBoolean">
            <summary>Sets the shim of CertificatePolicy.set_CertificateTransparency(CertificatePolicy this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.CertificateTypeGet">
            <summary>Sets the shim of CertificatePolicy.get_CertificateType(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.CertificateTypeSetString">
            <summary>Sets the shim of CertificatePolicy.set_CertificateType(CertificatePolicy this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.Constructor">
            <summary>Sets the shim of CertificatePolicy.CertificatePolicy(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.ConstructorStringString">
            <summary>Sets the shim of CertificatePolicy.CertificatePolicy(CertificatePolicy this, String issuerName, String subject)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.ConstructorStringStringSubjectAlternativeNames">
            <summary>Sets the shim of CertificatePolicy.CertificatePolicy(CertificatePolicy this, String issuerName, String subject, SubjectAlternativeNames subjectAlternativeNames)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.ConstructorStringSubjectAlternativeNames">
            <summary>Sets the shim of CertificatePolicy.CertificatePolicy(CertificatePolicy this, String issuerName, SubjectAlternativeNames subjectAlternativeNames)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.ContentTypeGet">
            <summary>Sets the shim of CertificatePolicy.get_ContentType(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.ContentTypeSetNullableOfCertificateContentType">
            <summary>Sets the shim of CertificatePolicy.set_ContentType(CertificatePolicy this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.CreatedOnGet">
            <summary>Sets the shim of CertificatePolicy.get_CreatedOn(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.CreatedOnSetNullableOfDateTimeOffset">
            <summary>Sets the shim of CertificatePolicy.set_CreatedOn(CertificatePolicy this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.DefaultGet">
            <summary>Sets the shim of CertificatePolicy.get_Default()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.EnabledGet">
            <summary>Sets the shim of CertificatePolicy.get_Enabled(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.EnabledSetNullableOfBoolean">
            <summary>Sets the shim of CertificatePolicy.set_Enabled(CertificatePolicy this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.EnhancedKeyUsageGet">
            <summary>Sets the shim of CertificatePolicy.get_EnhancedKeyUsage(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.ExportableGet">
            <summary>Sets the shim of CertificatePolicy.get_Exportable(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.ExportableSetNullableOfBoolean">
            <summary>Sets the shim of CertificatePolicy.set_Exportable(CertificatePolicy this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.IssuerNameGet">
            <summary>Sets the shim of CertificatePolicy.get_IssuerName(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.IssuerNameSetString">
            <summary>Sets the shim of CertificatePolicy.set_IssuerName(CertificatePolicy this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.KeyCurveNameGet">
            <summary>Sets the shim of CertificatePolicy.get_KeyCurveName(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.KeyCurveNameSetNullableOfCertificateKeyCurveName">
            <summary>Sets the shim of CertificatePolicy.set_KeyCurveName(CertificatePolicy this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.KeySizeGet">
            <summary>Sets the shim of CertificatePolicy.get_KeySize(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.KeySizeSetNullableOfInt32">
            <summary>Sets the shim of CertificatePolicy.set_KeySize(CertificatePolicy this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.KeyTypeGet">
            <summary>Sets the shim of CertificatePolicy.get_KeyType(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.KeyTypeSetNullableOfCertificateKeyType">
            <summary>Sets the shim of CertificatePolicy.set_KeyType(CertificatePolicy this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.KeyUsageGet">
            <summary>Sets the shim of CertificatePolicy.get_KeyUsage(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.LifetimeActionsGet">
            <summary>Sets the shim of CertificatePolicy.get_LifetimeActions(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.ReadAttributesPropertiesJsonElement">
            <summary>Sets the shim of CertificatePolicy.ReadAttributesProperties(CertificatePolicy this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.ReadKeyPropertiesJsonElement">
            <summary>Sets the shim of CertificatePolicy.ReadKeyProperties(CertificatePolicy this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.ReadSecretPropertiesJsonElement">
            <summary>Sets the shim of CertificatePolicy.ReadSecretProperties(CertificatePolicy this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.ReadX509CertificatePropertiesJsonElement">
            <summary>Sets the shim of CertificatePolicy.ReadX509CertificateProperties(CertificatePolicy this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.ReuseKeyGet">
            <summary>Sets the shim of CertificatePolicy.get_ReuseKey(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.ReuseKeySetNullableOfBoolean">
            <summary>Sets the shim of CertificatePolicy.set_ReuseKey(CertificatePolicy this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.StaticConstructor">
            <summary>Sets the shim of CertificatePolicy.CertificatePolicy()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.SubjectAlternativeNamesGet">
            <summary>Sets the shim of CertificatePolicy.get_SubjectAlternativeNames(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.SubjectAlternativeNamesSetSubjectAlternativeNames">
            <summary>Sets the shim of CertificatePolicy.set_SubjectAlternativeNames(CertificatePolicy this, SubjectAlternativeNames value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.SubjectGet">
            <summary>Sets the shim of CertificatePolicy.get_Subject(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.SubjectSetString">
            <summary>Sets the shim of CertificatePolicy.set_Subject(CertificatePolicy this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.UpdatedOnGet">
            <summary>Sets the shim of CertificatePolicy.get_UpdatedOn(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.UpdatedOnSetNullableOfDateTimeOffset">
            <summary>Sets the shim of CertificatePolicy.set_UpdatedOn(CertificatePolicy this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.ValidityInMonthsGet">
            <summary>Sets the shim of CertificatePolicy.get_ValidityInMonths(CertificatePolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.ValidityInMonthsSetNullableOfInt32">
            <summary>Sets the shim of CertificatePolicy.set_ValidityInMonths(CertificatePolicy this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.WriteAttributesPropertiesUtf8JsonWriter">
            <summary>Sets the shim of CertificatePolicy.WriteAttributesProperties(CertificatePolicy this, Utf8JsonWriter json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.WriteKeyPropertiesUtf8JsonWriter">
            <summary>Sets the shim of CertificatePolicy.WriteKeyProperties(CertificatePolicy this, Utf8JsonWriter json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.WriteSecretPropertiesUtf8JsonWriter">
            <summary>Sets the shim of CertificatePolicy.WriteSecretProperties(CertificatePolicy this, Utf8JsonWriter json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicy.WriteX509CertificatePropertiesUtf8JsonWriter">
            <summary>Sets the shim of CertificatePolicy.WriteX509CertificateProperties(CertificatePolicy this, Utf8JsonWriter json)</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicyAction">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.CertificatePolicyAction</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicyAction.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicyAction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicyAction.AutoRenewGet">
            <summary>Sets the shim of CertificatePolicyAction.get_AutoRenew()</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicyAction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicyAction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicyAction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicyAction.EmailContactsGet">
            <summary>Sets the shim of CertificatePolicyAction.get_EmailContacts()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicyAction.EqualityOpCertificatePolicyActionCertificatePolicyAction">
            <summary>Sets the shim of CertificatePolicyAction.op_Equality(CertificatePolicyAction left, CertificatePolicyAction right)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicyAction.ImplicitOpStringCertificatePolicyAction">
            <summary>Sets the shim of CertificatePolicyAction.op_Implicit(String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicyAction.InequalityOpCertificatePolicyActionCertificatePolicyAction">
            <summary>Sets the shim of CertificatePolicyAction.op_Inequality(CertificatePolicyAction left, CertificatePolicyAction right)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificatePolicyAction.StaticConstructor">
            <summary>Sets the shim of CertificatePolicyAction.CertificatePolicyAction()</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.CertificateProperties</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.#ctor(Azure.Security.KeyVault.Certificates.CertificateProperties)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.AzureSecurityKeyVaultIJsonDeserializableReadPropertiesJsonElement">
            <summary>Sets the shim of CertificateProperties.Azure.Security.KeyVault.IJsonDeserializable.ReadProperties(CertificateProperties this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.CreatedOnGet">
            <summary>Sets the shim of CertificateProperties.get_CreatedOn(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.CreatedOnSetNullableOfDateTimeOffset">
            <summary>Sets the shim of CertificateProperties.set_CreatedOn(CertificateProperties this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.EnabledGet">
            <summary>Sets the shim of CertificateProperties.get_Enabled(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.EnabledSetNullableOfBoolean">
            <summary>Sets the shim of CertificateProperties.set_Enabled(CertificateProperties this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.ExpiresOnGet">
            <summary>Sets the shim of CertificateProperties.get_ExpiresOn(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.ExpiresOnSetNullableOfDateTimeOffset">
            <summary>Sets the shim of CertificateProperties.set_ExpiresOn(CertificateProperties this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.HasTagsGet">
            <summary>Sets the shim of CertificateProperties.get_HasTags(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.IdGet">
            <summary>Sets the shim of CertificateProperties.get_Id(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.IdSetUri">
            <summary>Sets the shim of CertificateProperties.set_Id(CertificateProperties this, Uri value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.NameGet">
            <summary>Sets the shim of CertificateProperties.get_Name(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.NameSetString">
            <summary>Sets the shim of CertificateProperties.set_Name(CertificateProperties this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.NotBeforeGet">
            <summary>Sets the shim of CertificateProperties.get_NotBefore(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.NotBeforeSetNullableOfDateTimeOffset">
            <summary>Sets the shim of CertificateProperties.set_NotBefore(CertificateProperties this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.ParseIdUri">
            <summary>Sets the shim of CertificateProperties.ParseId(CertificateProperties this, Uri idToParse)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.ReadPropertyJsonProperty">
            <summary>Sets the shim of CertificateProperties.ReadProperty(CertificateProperties this, JsonProperty prop)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.RecoverableDaysGet">
            <summary>Sets the shim of CertificateProperties.get_RecoverableDays(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.RecoverableDaysSetNullableOfInt32">
            <summary>Sets the shim of CertificateProperties.set_RecoverableDays(CertificateProperties this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.RecoveryLevelGet">
            <summary>Sets the shim of CertificateProperties.get_RecoveryLevel(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.RecoveryLevelSetString">
            <summary>Sets the shim of CertificateProperties.set_RecoveryLevel(CertificateProperties this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.TagsGet">
            <summary>Sets the shim of CertificateProperties.get_Tags(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.UpdatedOnGet">
            <summary>Sets the shim of CertificateProperties.get_UpdatedOn(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.UpdatedOnSetNullableOfDateTimeOffset">
            <summary>Sets the shim of CertificateProperties.set_UpdatedOn(CertificateProperties this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.VaultUriGet">
            <summary>Sets the shim of CertificateProperties.get_VaultUri(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.VaultUriSetUri">
            <summary>Sets the shim of CertificateProperties.set_VaultUri(CertificateProperties this, Uri value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.VersionGet">
            <summary>Sets the shim of CertificateProperties.get_Version(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.VersionSetString">
            <summary>Sets the shim of CertificateProperties.set_Version(CertificateProperties this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.X509ThumbprintGet">
            <summary>Sets the shim of CertificateProperties.get_X509Thumbprint(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AllInstances.X509ThumbprintSetByteArray">
            <summary>Sets the shim of CertificateProperties.set_X509Thumbprint(CertificateProperties this, Byte[] value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.AzureSecurityKeyVaultIJsonDeserializableReadPropertiesJsonElement">
            <summary>Sets the shim of CertificateProperties.Azure.Security.KeyVault.IJsonDeserializable.ReadProperties(CertificateProperties this, JsonElement json)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.Constructor">
            <summary>Sets the shim of CertificateProperties.CertificateProperties(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.ConstructorString">
            <summary>Sets the shim of CertificateProperties.CertificateProperties(CertificateProperties this, String name)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.ConstructorUri">
            <summary>Sets the shim of CertificateProperties.CertificateProperties(CertificateProperties this, Uri id)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.CreatedOnGet">
            <summary>Sets the shim of CertificateProperties.get_CreatedOn(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.CreatedOnSetNullableOfDateTimeOffset">
            <summary>Sets the shim of CertificateProperties.set_CreatedOn(CertificateProperties this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.EnabledGet">
            <summary>Sets the shim of CertificateProperties.get_Enabled(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.EnabledSetNullableOfBoolean">
            <summary>Sets the shim of CertificateProperties.set_Enabled(CertificateProperties this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.ExpiresOnGet">
            <summary>Sets the shim of CertificateProperties.get_ExpiresOn(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.ExpiresOnSetNullableOfDateTimeOffset">
            <summary>Sets the shim of CertificateProperties.set_ExpiresOn(CertificateProperties this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.HasTagsGet">
            <summary>Sets the shim of CertificateProperties.get_HasTags(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.IdGet">
            <summary>Sets the shim of CertificateProperties.get_Id(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.IdSetUri">
            <summary>Sets the shim of CertificateProperties.set_Id(CertificateProperties this, Uri value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.NameGet">
            <summary>Sets the shim of CertificateProperties.get_Name(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.NameSetString">
            <summary>Sets the shim of CertificateProperties.set_Name(CertificateProperties this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.NotBeforeGet">
            <summary>Sets the shim of CertificateProperties.get_NotBefore(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.NotBeforeSetNullableOfDateTimeOffset">
            <summary>Sets the shim of CertificateProperties.set_NotBefore(CertificateProperties this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.ParseIdUri">
            <summary>Sets the shim of CertificateProperties.ParseId(CertificateProperties this, Uri idToParse)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.ReadPropertyJsonProperty">
            <summary>Sets the shim of CertificateProperties.ReadProperty(CertificateProperties this, JsonProperty prop)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.RecoverableDaysGet">
            <summary>Sets the shim of CertificateProperties.get_RecoverableDays(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.RecoverableDaysSetNullableOfInt32">
            <summary>Sets the shim of CertificateProperties.set_RecoverableDays(CertificateProperties this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.RecoveryLevelGet">
            <summary>Sets the shim of CertificateProperties.get_RecoveryLevel(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.RecoveryLevelSetString">
            <summary>Sets the shim of CertificateProperties.set_RecoveryLevel(CertificateProperties this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.TagsGet">
            <summary>Sets the shim of CertificateProperties.get_Tags(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.UpdatedOnGet">
            <summary>Sets the shim of CertificateProperties.get_UpdatedOn(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.UpdatedOnSetNullableOfDateTimeOffset">
            <summary>Sets the shim of CertificateProperties.set_UpdatedOn(CertificateProperties this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.VaultUriGet">
            <summary>Sets the shim of CertificateProperties.get_VaultUri(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.VaultUriSetUri">
            <summary>Sets the shim of CertificateProperties.set_VaultUri(CertificateProperties this, Uri value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.VersionGet">
            <summary>Sets the shim of CertificateProperties.get_Version(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.VersionSetString">
            <summary>Sets the shim of CertificateProperties.set_Version(CertificateProperties this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.X509ThumbprintGet">
            <summary>Sets the shim of CertificateProperties.get_X509Thumbprint(CertificateProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimCertificateProperties.X509ThumbprintSetByteArray">
            <summary>Sets the shim of CertificateProperties.set_X509Thumbprint(CertificateProperties this, Byte[] value)</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.DeleteCertificateOperation</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.#ctor(Azure.Security.KeyVault.Certificates.DeleteCertificateOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.AllInstances.CheckCompletedAsyncResponse">
            <summary>Sets the shim of DeleteCertificateOperation.CheckCompletedAsync(DeleteCertificateOperation this, Response response)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.AllInstances.CheckCompletedResponse">
            <summary>Sets the shim of DeleteCertificateOperation.CheckCompleted(DeleteCertificateOperation this, Response response)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.AllInstances.GetRawResponse">
            <summary>Sets the shim of DeleteCertificateOperation.GetRawResponse(DeleteCertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.AllInstances.HasCompletedGet">
            <summary>Sets the shim of DeleteCertificateOperation.get_HasCompleted(DeleteCertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.AllInstances.HasValueGet">
            <summary>Sets the shim of DeleteCertificateOperation.get_HasValue(DeleteCertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.AllInstances.IdGet">
            <summary>Sets the shim of DeleteCertificateOperation.get_Id(DeleteCertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.AllInstances.UpdateStatusAsyncCancellationToken">
            <summary>Sets the shim of DeleteCertificateOperation.UpdateStatusAsync(DeleteCertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.AllInstances.UpdateStatusCancellationToken">
            <summary>Sets the shim of DeleteCertificateOperation.UpdateStatus(DeleteCertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.AllInstances.ValueGet">
            <summary>Sets the shim of DeleteCertificateOperation.get_Value(DeleteCertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.AllInstances.WaitForCompletionAsyncCancellationToken">
            <summary>Sets the shim of DeleteCertificateOperation.WaitForCompletionAsync(DeleteCertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.AllInstances.WaitForCompletionAsyncTimeSpanCancellationToken">
            <summary>Sets the shim of DeleteCertificateOperation.WaitForCompletionAsync(DeleteCertificateOperation this, TimeSpan pollingInterval, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.CheckCompletedAsyncResponse">
            <summary>Sets the shim of DeleteCertificateOperation.CheckCompletedAsync(DeleteCertificateOperation this, Response response)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.CheckCompletedResponse">
            <summary>Sets the shim of DeleteCertificateOperation.CheckCompleted(DeleteCertificateOperation this, Response response)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.GetRawResponse">
            <summary>Sets the shim of DeleteCertificateOperation.GetRawResponse(DeleteCertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.HasCompletedGet">
            <summary>Sets the shim of DeleteCertificateOperation.get_HasCompleted(DeleteCertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.HasValueGet">
            <summary>Sets the shim of DeleteCertificateOperation.get_HasValue(DeleteCertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.IdGet">
            <summary>Sets the shim of DeleteCertificateOperation.get_Id(DeleteCertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.StaticConstructor">
            <summary>Sets the shim of DeleteCertificateOperation.DeleteCertificateOperation()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.UpdateStatusAsyncCancellationToken">
            <summary>Sets the shim of DeleteCertificateOperation.UpdateStatusAsync(DeleteCertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.UpdateStatusCancellationToken">
            <summary>Sets the shim of DeleteCertificateOperation.UpdateStatus(DeleteCertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.ValueGet">
            <summary>Sets the shim of DeleteCertificateOperation.get_Value(DeleteCertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.WaitForCompletionAsyncCancellationToken">
            <summary>Sets the shim of DeleteCertificateOperation.WaitForCompletionAsync(DeleteCertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeleteCertificateOperation.WaitForCompletionAsyncTimeSpanCancellationToken">
            <summary>Sets the shim of DeleteCertificateOperation.WaitForCompletionAsync(DeleteCertificateOperation this, TimeSpan pollingInterval, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimDeletedCertificate">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.DeletedCertificate</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimDeletedCertificate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimDeletedCertificate.#ctor(Azure.Security.KeyVault.Certificates.DeletedCertificate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimDeletedCertificate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeletedCertificate.AllInstances.DeletedOnGet">
            <summary>Sets the shim of DeletedCertificate.get_DeletedOn(DeletedCertificate this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeletedCertificate.AllInstances.DeletedOnSetNullableOfDateTimeOffset">
            <summary>Sets the shim of DeletedCertificate.set_DeletedOn(DeletedCertificate this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeletedCertificate.AllInstances.ReadPropertyJsonProperty">
            <summary>Sets the shim of DeletedCertificate.ReadProperty(DeletedCertificate this, JsonProperty prop)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeletedCertificate.AllInstances.RecoveryIdGet">
            <summary>Sets the shim of DeletedCertificate.get_RecoveryId(DeletedCertificate this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeletedCertificate.AllInstances.RecoveryIdSetUri">
            <summary>Sets the shim of DeletedCertificate.set_RecoveryId(DeletedCertificate this, Uri value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeletedCertificate.AllInstances.ScheduledPurgeDateGet">
            <summary>Sets the shim of DeletedCertificate.get_ScheduledPurgeDate(DeletedCertificate this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeletedCertificate.AllInstances.ScheduledPurgeDateSetNullableOfDateTimeOffset">
            <summary>Sets the shim of DeletedCertificate.set_ScheduledPurgeDate(DeletedCertificate this, Nullable`1 value)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimDeletedCertificate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimDeletedCertificate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeletedCertificate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeletedCertificate.ConstructorCertificateProperties">
            <summary>Sets the shim of DeletedCertificate.DeletedCertificate(DeletedCertificate this, CertificateProperties properties)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeletedCertificate.DeletedOnGet">
            <summary>Sets the shim of DeletedCertificate.get_DeletedOn(DeletedCertificate this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeletedCertificate.DeletedOnSetNullableOfDateTimeOffset">
            <summary>Sets the shim of DeletedCertificate.set_DeletedOn(DeletedCertificate this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeletedCertificate.ReadPropertyJsonProperty">
            <summary>Sets the shim of DeletedCertificate.ReadProperty(DeletedCertificate this, JsonProperty prop)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeletedCertificate.RecoveryIdGet">
            <summary>Sets the shim of DeletedCertificate.get_RecoveryId(DeletedCertificate this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeletedCertificate.RecoveryIdSetUri">
            <summary>Sets the shim of DeletedCertificate.set_RecoveryId(DeletedCertificate this, Uri value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeletedCertificate.ScheduledPurgeDateGet">
            <summary>Sets the shim of DeletedCertificate.get_ScheduledPurgeDate(DeletedCertificate this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimDeletedCertificate.ScheduledPurgeDateSetNullableOfDateTimeOffset">
            <summary>Sets the shim of DeletedCertificate.set_ScheduledPurgeDate(DeletedCertificate this, Nullable`1 value)</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.ImportCertificateOptions</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.#ctor(Azure.Security.KeyVault.Certificates.ImportCertificateOptions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.AllInstances.AzureSecurityKeyVaultIJsonSerializableWritePropertiesUtf8JsonWriter">
            <summary>Sets the shim of ImportCertificateOptions.Azure.Security.KeyVault.IJsonSerializable.WriteProperties(ImportCertificateOptions this, Utf8JsonWriter json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.AllInstances.CertificateGet">
            <summary>Sets the shim of ImportCertificateOptions.get_Certificate(ImportCertificateOptions this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.AllInstances.EnabledGet">
            <summary>Sets the shim of ImportCertificateOptions.get_Enabled(ImportCertificateOptions this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.AllInstances.EnabledSetNullableOfBoolean">
            <summary>Sets the shim of ImportCertificateOptions.set_Enabled(ImportCertificateOptions this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.AllInstances.NameGet">
            <summary>Sets the shim of ImportCertificateOptions.get_Name(ImportCertificateOptions this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.AllInstances.PasswordGet">
            <summary>Sets the shim of ImportCertificateOptions.get_Password(ImportCertificateOptions this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.AllInstances.PasswordSetString">
            <summary>Sets the shim of ImportCertificateOptions.set_Password(ImportCertificateOptions this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.AllInstances.PolicyGet">
            <summary>Sets the shim of ImportCertificateOptions.get_Policy(ImportCertificateOptions this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.AllInstances.PolicySetCertificatePolicy">
            <summary>Sets the shim of ImportCertificateOptions.set_Policy(ImportCertificateOptions this, CertificatePolicy value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.AllInstances.TagsGet">
            <summary>Sets the shim of ImportCertificateOptions.get_Tags(ImportCertificateOptions this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.AzureSecurityKeyVaultIJsonSerializableWritePropertiesUtf8JsonWriter">
            <summary>Sets the shim of ImportCertificateOptions.Azure.Security.KeyVault.IJsonSerializable.WriteProperties(ImportCertificateOptions this, Utf8JsonWriter json)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.CertificateGet">
            <summary>Sets the shim of ImportCertificateOptions.get_Certificate(ImportCertificateOptions this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.ConstructorStringByteArray">
            <summary>Sets the shim of ImportCertificateOptions.ImportCertificateOptions(ImportCertificateOptions this, String name, Byte[] certificate)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.EnabledGet">
            <summary>Sets the shim of ImportCertificateOptions.get_Enabled(ImportCertificateOptions this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.EnabledSetNullableOfBoolean">
            <summary>Sets the shim of ImportCertificateOptions.set_Enabled(ImportCertificateOptions this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.NameGet">
            <summary>Sets the shim of ImportCertificateOptions.get_Name(ImportCertificateOptions this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.PasswordGet">
            <summary>Sets the shim of ImportCertificateOptions.get_Password(ImportCertificateOptions this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.PasswordSetString">
            <summary>Sets the shim of ImportCertificateOptions.set_Password(ImportCertificateOptions this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.PolicyGet">
            <summary>Sets the shim of ImportCertificateOptions.get_Policy(ImportCertificateOptions this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.PolicySetCertificatePolicy">
            <summary>Sets the shim of ImportCertificateOptions.set_Policy(ImportCertificateOptions this, CertificatePolicy value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.StaticConstructor">
            <summary>Sets the shim of ImportCertificateOptions.ImportCertificateOptions()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimImportCertificateOptions.TagsGet">
            <summary>Sets the shim of ImportCertificateOptions.get_Tags(ImportCertificateOptions this)</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.IssuerProperties</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.#ctor(Azure.Security.KeyVault.Certificates.IssuerProperties)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.AllInstances.AzureSecurityKeyVaultIJsonDeserializableReadPropertiesJsonElement">
            <summary>Sets the shim of IssuerProperties.Azure.Security.KeyVault.IJsonDeserializable.ReadProperties(IssuerProperties this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.AllInstances.AzureSecurityKeyVaultIJsonSerializableWritePropertiesUtf8JsonWriter">
            <summary>Sets the shim of IssuerProperties.Azure.Security.KeyVault.IJsonSerializable.WriteProperties(IssuerProperties this, Utf8JsonWriter json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.AllInstances.IdGet">
            <summary>Sets the shim of IssuerProperties.get_Id(IssuerProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.AllInstances.IdSetUri">
            <summary>Sets the shim of IssuerProperties.set_Id(IssuerProperties this, Uri value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.AllInstances.NameGet">
            <summary>Sets the shim of IssuerProperties.get_Name(IssuerProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.AllInstances.NameSetString">
            <summary>Sets the shim of IssuerProperties.set_Name(IssuerProperties this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.AllInstances.ProviderGet">
            <summary>Sets the shim of IssuerProperties.get_Provider(IssuerProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.AllInstances.ProviderSetString">
            <summary>Sets the shim of IssuerProperties.set_Provider(IssuerProperties this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.AllInstances.ReadPropertyJsonProperty">
            <summary>Sets the shim of IssuerProperties.ReadProperty(IssuerProperties this, JsonProperty prop)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.AllInstances.WritePropertiesUtf8JsonWriter">
            <summary>Sets the shim of IssuerProperties.WriteProperties(IssuerProperties this, Utf8JsonWriter json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.AzureSecurityKeyVaultIJsonDeserializableReadPropertiesJsonElement">
            <summary>Sets the shim of IssuerProperties.Azure.Security.KeyVault.IJsonDeserializable.ReadProperties(IssuerProperties this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.AzureSecurityKeyVaultIJsonSerializableWritePropertiesUtf8JsonWriter">
            <summary>Sets the shim of IssuerProperties.Azure.Security.KeyVault.IJsonSerializable.WriteProperties(IssuerProperties this, Utf8JsonWriter json)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.Constructor">
            <summary>Sets the shim of IssuerProperties.IssuerProperties(IssuerProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.ConstructorString">
            <summary>Sets the shim of IssuerProperties.IssuerProperties(IssuerProperties this, String name)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.IdGet">
            <summary>Sets the shim of IssuerProperties.get_Id(IssuerProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.IdSetUri">
            <summary>Sets the shim of IssuerProperties.set_Id(IssuerProperties this, Uri value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.NameGet">
            <summary>Sets the shim of IssuerProperties.get_Name(IssuerProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.NameSetString">
            <summary>Sets the shim of IssuerProperties.set_Name(IssuerProperties this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.ProviderGet">
            <summary>Sets the shim of IssuerProperties.get_Provider(IssuerProperties this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.ProviderSetString">
            <summary>Sets the shim of IssuerProperties.set_Provider(IssuerProperties this, String value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.ReadPropertyJsonProperty">
            <summary>Sets the shim of IssuerProperties.ReadProperty(IssuerProperties this, JsonProperty prop)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.StaticConstructor">
            <summary>Sets the shim of IssuerProperties.IssuerProperties()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimIssuerProperties.WritePropertiesUtf8JsonWriter">
            <summary>Sets the shim of IssuerProperties.WriteProperties(IssuerProperties this, Utf8JsonWriter json)</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.KeyVaultCertificate</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.#ctor(Azure.Security.KeyVault.Certificates.KeyVaultCertificate)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.AllInstances.AzureSecurityKeyVaultIJsonDeserializableReadPropertiesJsonElement">
            <summary>Sets the shim of KeyVaultCertificate.Azure.Security.KeyVault.IJsonDeserializable.ReadProperties(KeyVaultCertificate this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.AllInstances.CerGet">
            <summary>Sets the shim of KeyVaultCertificate.get_Cer(KeyVaultCertificate this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.AllInstances.CerSetByteArray">
            <summary>Sets the shim of KeyVaultCertificate.set_Cer(KeyVaultCertificate this, Byte[] value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.AllInstances.IdGet">
            <summary>Sets the shim of KeyVaultCertificate.get_Id(KeyVaultCertificate this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.AllInstances.KeyIdGet">
            <summary>Sets the shim of KeyVaultCertificate.get_KeyId(KeyVaultCertificate this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.AllInstances.KeyIdSetUri">
            <summary>Sets the shim of KeyVaultCertificate.set_KeyId(KeyVaultCertificate this, Uri value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.AllInstances.NameGet">
            <summary>Sets the shim of KeyVaultCertificate.get_Name(KeyVaultCertificate this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.AllInstances.PropertiesGet">
            <summary>Sets the shim of KeyVaultCertificate.get_Properties(KeyVaultCertificate this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.AllInstances.ReadPropertyJsonProperty">
            <summary>Sets the shim of KeyVaultCertificate.ReadProperty(KeyVaultCertificate this, JsonProperty prop)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.AllInstances.SecretIdGet">
            <summary>Sets the shim of KeyVaultCertificate.get_SecretId(KeyVaultCertificate this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.AllInstances.SecretIdSetUri">
            <summary>Sets the shim of KeyVaultCertificate.set_SecretId(KeyVaultCertificate this, Uri value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.AzureSecurityKeyVaultIJsonDeserializableReadPropertiesJsonElement">
            <summary>Sets the shim of KeyVaultCertificate.Azure.Security.KeyVault.IJsonDeserializable.ReadProperties(KeyVaultCertificate this, JsonElement json)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.CerGet">
            <summary>Sets the shim of KeyVaultCertificate.get_Cer(KeyVaultCertificate this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.CerSetByteArray">
            <summary>Sets the shim of KeyVaultCertificate.set_Cer(KeyVaultCertificate this, Byte[] value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.ConstructorCertificateProperties">
            <summary>Sets the shim of KeyVaultCertificate.KeyVaultCertificate(KeyVaultCertificate this, CertificateProperties properties)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.IdGet">
            <summary>Sets the shim of KeyVaultCertificate.get_Id(KeyVaultCertificate this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.KeyIdGet">
            <summary>Sets the shim of KeyVaultCertificate.get_KeyId(KeyVaultCertificate this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.KeyIdSetUri">
            <summary>Sets the shim of KeyVaultCertificate.set_KeyId(KeyVaultCertificate this, Uri value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.NameGet">
            <summary>Sets the shim of KeyVaultCertificate.get_Name(KeyVaultCertificate this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.PropertiesGet">
            <summary>Sets the shim of KeyVaultCertificate.get_Properties(KeyVaultCertificate this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.ReadPropertyJsonProperty">
            <summary>Sets the shim of KeyVaultCertificate.ReadProperty(KeyVaultCertificate this, JsonProperty prop)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.SecretIdGet">
            <summary>Sets the shim of KeyVaultCertificate.get_SecretId(KeyVaultCertificate this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificate.SecretIdSetUri">
            <summary>Sets the shim of KeyVaultCertificate.set_SecretId(KeyVaultCertificate this, Uri value)</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificateWithPolicy">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificateWithPolicy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificateWithPolicy.#ctor(Azure.Security.KeyVault.Certificates.KeyVaultCertificateWithPolicy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificateWithPolicy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificateWithPolicy.AllInstances.PolicyGet">
            <summary>Sets the shim of KeyVaultCertificateWithPolicy.get_Policy(KeyVaultCertificateWithPolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificateWithPolicy.AllInstances.PolicySetCertificatePolicy">
            <summary>Sets the shim of KeyVaultCertificateWithPolicy.set_Policy(KeyVaultCertificateWithPolicy this, CertificatePolicy value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificateWithPolicy.AllInstances.ReadPropertyJsonProperty">
            <summary>Sets the shim of KeyVaultCertificateWithPolicy.ReadProperty(KeyVaultCertificateWithPolicy this, JsonProperty prop)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificateWithPolicy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificateWithPolicy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificateWithPolicy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificateWithPolicy.ConstructorCertificateProperties">
            <summary>Sets the shim of KeyVaultCertificateWithPolicy.KeyVaultCertificateWithPolicy(KeyVaultCertificateWithPolicy this, CertificateProperties properties)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificateWithPolicy.PolicyGet">
            <summary>Sets the shim of KeyVaultCertificateWithPolicy.get_Policy(KeyVaultCertificateWithPolicy this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificateWithPolicy.PolicySetCertificatePolicy">
            <summary>Sets the shim of KeyVaultCertificateWithPolicy.set_Policy(KeyVaultCertificateWithPolicy this, CertificatePolicy value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimKeyVaultCertificateWithPolicy.ReadPropertyJsonProperty">
            <summary>Sets the shim of KeyVaultCertificateWithPolicy.ReadProperty(KeyVaultCertificateWithPolicy this, JsonProperty prop)</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.LifetimeAction</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction.#ctor(Azure.Security.KeyVault.Certificates.LifetimeAction)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction.ActionGet">
            <summary>Sets the shim of LifetimeAction.get_Action(LifetimeAction this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction.ActionSetCertificatePolicyAction">
            <summary>Sets the shim of LifetimeAction.set_Action(LifetimeAction this, CertificatePolicyAction value)</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction.AllInstances.ActionGet">
            <summary>Sets the shim of LifetimeAction.get_Action(LifetimeAction this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction.AllInstances.ActionSetCertificatePolicyAction">
            <summary>Sets the shim of LifetimeAction.set_Action(LifetimeAction this, CertificatePolicyAction value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction.AllInstances.AzureSecurityKeyVaultIJsonDeserializableReadPropertiesJsonElement">
            <summary>Sets the shim of LifetimeAction.Azure.Security.KeyVault.IJsonDeserializable.ReadProperties(LifetimeAction this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction.AllInstances.AzureSecurityKeyVaultIJsonSerializableWritePropertiesUtf8JsonWriter">
            <summary>Sets the shim of LifetimeAction.Azure.Security.KeyVault.IJsonSerializable.WriteProperties(LifetimeAction this, Utf8JsonWriter json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction.AllInstances.DaysBeforeExpiryGet">
            <summary>Sets the shim of LifetimeAction.get_DaysBeforeExpiry(LifetimeAction this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction.AllInstances.DaysBeforeExpirySetNullableOfInt32">
            <summary>Sets the shim of LifetimeAction.set_DaysBeforeExpiry(LifetimeAction this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction.AllInstances.LifetimePercentageGet">
            <summary>Sets the shim of LifetimeAction.get_LifetimePercentage(LifetimeAction this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction.AllInstances.LifetimePercentageSetNullableOfInt32">
            <summary>Sets the shim of LifetimeAction.set_LifetimePercentage(LifetimeAction this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction.AzureSecurityKeyVaultIJsonDeserializableReadPropertiesJsonElement">
            <summary>Sets the shim of LifetimeAction.Azure.Security.KeyVault.IJsonDeserializable.ReadProperties(LifetimeAction this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction.AzureSecurityKeyVaultIJsonSerializableWritePropertiesUtf8JsonWriter">
            <summary>Sets the shim of LifetimeAction.Azure.Security.KeyVault.IJsonSerializable.WriteProperties(LifetimeAction this, Utf8JsonWriter json)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction.Constructor">
            <summary>Sets the shim of LifetimeAction.LifetimeAction(LifetimeAction this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction.ConstructorCertificatePolicyAction">
            <summary>Sets the shim of LifetimeAction.LifetimeAction(LifetimeAction this, CertificatePolicyAction action)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction.DaysBeforeExpiryGet">
            <summary>Sets the shim of LifetimeAction.get_DaysBeforeExpiry(LifetimeAction this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction.DaysBeforeExpirySetNullableOfInt32">
            <summary>Sets the shim of LifetimeAction.set_DaysBeforeExpiry(LifetimeAction this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction.FromJsonObjectJsonElement">
            <summary>Sets the shim of LifetimeAction.FromJsonObject(JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction.LifetimePercentageGet">
            <summary>Sets the shim of LifetimeAction.get_LifetimePercentage(LifetimeAction this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction.LifetimePercentageSetNullableOfInt32">
            <summary>Sets the shim of LifetimeAction.set_LifetimePercentage(LifetimeAction this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimLifetimeAction.StaticConstructor">
            <summary>Sets the shim of LifetimeAction.LifetimeAction()</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimMergeCertificateOptions">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.MergeCertificateOptions</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimMergeCertificateOptions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimMergeCertificateOptions.#ctor(Azure.Security.KeyVault.Certificates.MergeCertificateOptions)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimMergeCertificateOptions.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimMergeCertificateOptions.AllInstances.AzureSecurityKeyVaultIJsonSerializableWritePropertiesUtf8JsonWriter">
            <summary>Sets the shim of MergeCertificateOptions.Azure.Security.KeyVault.IJsonSerializable.WriteProperties(MergeCertificateOptions this, Utf8JsonWriter json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimMergeCertificateOptions.AllInstances.EnabledGet">
            <summary>Sets the shim of MergeCertificateOptions.get_Enabled(MergeCertificateOptions this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimMergeCertificateOptions.AllInstances.EnabledSetNullableOfBoolean">
            <summary>Sets the shim of MergeCertificateOptions.set_Enabled(MergeCertificateOptions this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimMergeCertificateOptions.AllInstances.NameGet">
            <summary>Sets the shim of MergeCertificateOptions.get_Name(MergeCertificateOptions this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimMergeCertificateOptions.AllInstances.TagsGet">
            <summary>Sets the shim of MergeCertificateOptions.get_Tags(MergeCertificateOptions this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimMergeCertificateOptions.AllInstances.X509CertificatesGet">
            <summary>Sets the shim of MergeCertificateOptions.get_X509Certificates(MergeCertificateOptions this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimMergeCertificateOptions.AzureSecurityKeyVaultIJsonSerializableWritePropertiesUtf8JsonWriter">
            <summary>Sets the shim of MergeCertificateOptions.Azure.Security.KeyVault.IJsonSerializable.WriteProperties(MergeCertificateOptions this, Utf8JsonWriter json)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimMergeCertificateOptions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimMergeCertificateOptions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimMergeCertificateOptions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimMergeCertificateOptions.ConstructorStringIEnumerableOfByteArray">
            <summary>Sets the shim of MergeCertificateOptions.MergeCertificateOptions(MergeCertificateOptions this, String name, IEnumerable`1 x509Certificates)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimMergeCertificateOptions.EnabledGet">
            <summary>Sets the shim of MergeCertificateOptions.get_Enabled(MergeCertificateOptions this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimMergeCertificateOptions.EnabledSetNullableOfBoolean">
            <summary>Sets the shim of MergeCertificateOptions.set_Enabled(MergeCertificateOptions this, Nullable`1 value)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimMergeCertificateOptions.NameGet">
            <summary>Sets the shim of MergeCertificateOptions.get_Name(MergeCertificateOptions this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimMergeCertificateOptions.StaticConstructor">
            <summary>Sets the shim of MergeCertificateOptions.MergeCertificateOptions()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimMergeCertificateOptions.TagsGet">
            <summary>Sets the shim of MergeCertificateOptions.get_Tags(MergeCertificateOptions this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimMergeCertificateOptions.X509CertificatesGet">
            <summary>Sets the shim of MergeCertificateOptions.get_X509Certificates(MergeCertificateOptions this)</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.RecoverDeletedCertificateOperation</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.#ctor(Azure.Security.KeyVault.Certificates.RecoverDeletedCertificateOperation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.AllInstances.CheckCompletedAsyncResponse">
            <summary>Sets the shim of RecoverDeletedCertificateOperation.CheckCompletedAsync(RecoverDeletedCertificateOperation this, Response response)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.AllInstances.CheckCompletedResponse">
            <summary>Sets the shim of RecoverDeletedCertificateOperation.CheckCompleted(RecoverDeletedCertificateOperation this, Response response)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.AllInstances.GetRawResponse">
            <summary>Sets the shim of RecoverDeletedCertificateOperation.GetRawResponse(RecoverDeletedCertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.AllInstances.HasCompletedGet">
            <summary>Sets the shim of RecoverDeletedCertificateOperation.get_HasCompleted(RecoverDeletedCertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.AllInstances.HasValueGet">
            <summary>Sets the shim of RecoverDeletedCertificateOperation.get_HasValue(RecoverDeletedCertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.AllInstances.IdGet">
            <summary>Sets the shim of RecoverDeletedCertificateOperation.get_Id(RecoverDeletedCertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.AllInstances.UpdateStatusAsyncCancellationToken">
            <summary>Sets the shim of RecoverDeletedCertificateOperation.UpdateStatusAsync(RecoverDeletedCertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.AllInstances.UpdateStatusCancellationToken">
            <summary>Sets the shim of RecoverDeletedCertificateOperation.UpdateStatus(RecoverDeletedCertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.AllInstances.ValueGet">
            <summary>Sets the shim of RecoverDeletedCertificateOperation.get_Value(RecoverDeletedCertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.AllInstances.WaitForCompletionAsyncCancellationToken">
            <summary>Sets the shim of RecoverDeletedCertificateOperation.WaitForCompletionAsync(RecoverDeletedCertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.AllInstances.WaitForCompletionAsyncTimeSpanCancellationToken">
            <summary>Sets the shim of RecoverDeletedCertificateOperation.WaitForCompletionAsync(RecoverDeletedCertificateOperation this, TimeSpan pollingInterval, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.CheckCompletedAsyncResponse">
            <summary>Sets the shim of RecoverDeletedCertificateOperation.CheckCompletedAsync(RecoverDeletedCertificateOperation this, Response response)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.CheckCompletedResponse">
            <summary>Sets the shim of RecoverDeletedCertificateOperation.CheckCompleted(RecoverDeletedCertificateOperation this, Response response)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.GetRawResponse">
            <summary>Sets the shim of RecoverDeletedCertificateOperation.GetRawResponse(RecoverDeletedCertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.HasCompletedGet">
            <summary>Sets the shim of RecoverDeletedCertificateOperation.get_HasCompleted(RecoverDeletedCertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.HasValueGet">
            <summary>Sets the shim of RecoverDeletedCertificateOperation.get_HasValue(RecoverDeletedCertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.IdGet">
            <summary>Sets the shim of RecoverDeletedCertificateOperation.get_Id(RecoverDeletedCertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.StaticConstructor">
            <summary>Sets the shim of RecoverDeletedCertificateOperation.RecoverDeletedCertificateOperation()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.UpdateStatusAsyncCancellationToken">
            <summary>Sets the shim of RecoverDeletedCertificateOperation.UpdateStatusAsync(RecoverDeletedCertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.UpdateStatusCancellationToken">
            <summary>Sets the shim of RecoverDeletedCertificateOperation.UpdateStatus(RecoverDeletedCertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.ValueGet">
            <summary>Sets the shim of RecoverDeletedCertificateOperation.get_Value(RecoverDeletedCertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.WaitForCompletionAsyncCancellationToken">
            <summary>Sets the shim of RecoverDeletedCertificateOperation.WaitForCompletionAsync(RecoverDeletedCertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimRecoverDeletedCertificateOperation.WaitForCompletionAsyncTimeSpanCancellationToken">
            <summary>Sets the shim of RecoverDeletedCertificateOperation.WaitForCompletionAsync(RecoverDeletedCertificateOperation this, TimeSpan pollingInterval, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimSubjectAlternativeNames">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.SubjectAlternativeNames</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimSubjectAlternativeNames.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimSubjectAlternativeNames.#ctor(Azure.Security.KeyVault.Certificates.SubjectAlternativeNames)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimSubjectAlternativeNames.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimSubjectAlternativeNames.AllInstances.AzureSecurityKeyVaultIJsonDeserializableReadPropertiesJsonElement">
            <summary>Sets the shim of SubjectAlternativeNames.Azure.Security.KeyVault.IJsonDeserializable.ReadProperties(SubjectAlternativeNames this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimSubjectAlternativeNames.AllInstances.AzureSecurityKeyVaultIJsonSerializableWritePropertiesUtf8JsonWriter">
            <summary>Sets the shim of SubjectAlternativeNames.Azure.Security.KeyVault.IJsonSerializable.WriteProperties(SubjectAlternativeNames this, Utf8JsonWriter json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimSubjectAlternativeNames.AllInstances.DnsNamesGet">
            <summary>Sets the shim of SubjectAlternativeNames.get_DnsNames(SubjectAlternativeNames this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimSubjectAlternativeNames.AllInstances.EmailsGet">
            <summary>Sets the shim of SubjectAlternativeNames.get_Emails(SubjectAlternativeNames this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimSubjectAlternativeNames.AllInstances.IsEmptyGet">
            <summary>Sets the shim of SubjectAlternativeNames.get_IsEmpty(SubjectAlternativeNames this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimSubjectAlternativeNames.AllInstances.UserPrincipalNamesGet">
            <summary>Sets the shim of SubjectAlternativeNames.get_UserPrincipalNames(SubjectAlternativeNames this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimSubjectAlternativeNames.AzureSecurityKeyVaultIJsonDeserializableReadPropertiesJsonElement">
            <summary>Sets the shim of SubjectAlternativeNames.Azure.Security.KeyVault.IJsonDeserializable.ReadProperties(SubjectAlternativeNames this, JsonElement json)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimSubjectAlternativeNames.AzureSecurityKeyVaultIJsonSerializableWritePropertiesUtf8JsonWriter">
            <summary>Sets the shim of SubjectAlternativeNames.Azure.Security.KeyVault.IJsonSerializable.WriteProperties(SubjectAlternativeNames this, Utf8JsonWriter json)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimSubjectAlternativeNames.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimSubjectAlternativeNames.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimSubjectAlternativeNames.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimSubjectAlternativeNames.Constructor">
            <summary>Sets the shim of SubjectAlternativeNames.SubjectAlternativeNames(SubjectAlternativeNames this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimSubjectAlternativeNames.DnsNamesGet">
            <summary>Sets the shim of SubjectAlternativeNames.get_DnsNames(SubjectAlternativeNames this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimSubjectAlternativeNames.EmailsGet">
            <summary>Sets the shim of SubjectAlternativeNames.get_Emails(SubjectAlternativeNames this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimSubjectAlternativeNames.IsEmptyGet">
            <summary>Sets the shim of SubjectAlternativeNames.get_IsEmpty(SubjectAlternativeNames this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimSubjectAlternativeNames.StaticConstructor">
            <summary>Sets the shim of SubjectAlternativeNames.SubjectAlternativeNames()</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimSubjectAlternativeNames.UserPrincipalNamesGet">
            <summary>Sets the shim of SubjectAlternativeNames.get_UserPrincipalNames(SubjectAlternativeNames this)</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.ShimWellKnownIssuerNames">
            <summary>Shim type of Azure.Security.KeyVault.Certificates.WellKnownIssuerNames</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimWellKnownIssuerNames.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimWellKnownIssuerNames.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.ShimWellKnownIssuerNames.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.ShimWellKnownIssuerNames.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.StubAdministratorContact">
            <summary>Stub type of Azure.Security.KeyVault.Certificates.AdministratorContact</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubAdministratorContact.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubAdministratorContact.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubAdministratorContact.InitializeStub">
            <summary>Initializes a new instance of type StubAdministratorContact</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubAdministratorContact.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubAdministratorContact.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient">
            <summary>Stub type of Azure.Security.KeyVault.Certificates.CertificateClient</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.#ctor(System.Uri,Azure.Core.TokenCredential)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Security.KeyVault.Certificates.CertificateClientOptions)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.BackupCertificate(System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.BackupCertificate(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.BackupCertificateAsync(System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.BackupCertificateAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.BackupCertificateAsyncStringCancellationToken">
            <summary>Sets the stub of CertificateClient.BackupCertificateAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.BackupCertificateStringCancellationToken">
            <summary>Sets the stub of CertificateClient.BackupCertificate(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.CreateIssuer(Azure.Security.KeyVault.Certificates.CertificateIssuer,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.CreateIssuer(CertificateClient this, CertificateIssuer issuer, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.CreateIssuerAsync(Azure.Security.KeyVault.Certificates.CertificateIssuer,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.CreateIssuerAsync(CertificateClient this, CertificateIssuer issuer, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.CreateIssuerAsyncCertificateIssuerCancellationToken">
            <summary>Sets the stub of CertificateClient.CreateIssuerAsync(CertificateClient this, CertificateIssuer issuer, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.CreateIssuerCertificateIssuerCancellationToken">
            <summary>Sets the stub of CertificateClient.CreateIssuer(CertificateClient this, CertificateIssuer issuer, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.DeleteContacts(System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.DeleteContacts(CertificateClient this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.DeleteContactsAsync(System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.DeleteContactsAsync(CertificateClient this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.DeleteContactsAsyncCancellationToken">
            <summary>Sets the stub of CertificateClient.DeleteContactsAsync(CertificateClient this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.DeleteContactsCancellationToken">
            <summary>Sets the stub of CertificateClient.DeleteContacts(CertificateClient this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.DeleteIssuer(System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.DeleteIssuer(CertificateClient this, String issuerName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.DeleteIssuerAsync(System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.DeleteIssuerAsync(CertificateClient this, String issuerName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.DeleteIssuerAsyncStringCancellationToken">
            <summary>Sets the stub of CertificateClient.DeleteIssuerAsync(CertificateClient this, String issuerName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.DeleteIssuerStringCancellationToken">
            <summary>Sets the stub of CertificateClient.DeleteIssuer(CertificateClient this, String issuerName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetCertificate(System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.GetCertificate(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetCertificateAsync(System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.GetCertificateAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetCertificateAsyncStringCancellationToken">
            <summary>Sets the stub of CertificateClient.GetCertificateAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetCertificateOperation(System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.GetCertificateOperation(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetCertificateOperationAsync(System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.GetCertificateOperationAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetCertificateOperationAsyncStringCancellationToken">
            <summary>Sets the stub of CertificateClient.GetCertificateOperationAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetCertificateOperationStringCancellationToken">
            <summary>Sets the stub of CertificateClient.GetCertificateOperation(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetCertificatePolicy(System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.GetCertificatePolicy(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetCertificatePolicyAsync(System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.GetCertificatePolicyAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetCertificatePolicyAsyncStringCancellationToken">
            <summary>Sets the stub of CertificateClient.GetCertificatePolicyAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetCertificatePolicyStringCancellationToken">
            <summary>Sets the stub of CertificateClient.GetCertificatePolicy(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetCertificateStringCancellationToken">
            <summary>Sets the stub of CertificateClient.GetCertificate(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetCertificateVersion(System.String,System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.GetCertificateVersion(CertificateClient this, String certificateName, String version, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetCertificateVersionAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.GetCertificateVersionAsync(CertificateClient this, String certificateName, String version, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetCertificateVersionAsyncStringStringCancellationToken">
            <summary>Sets the stub of CertificateClient.GetCertificateVersionAsync(CertificateClient this, String certificateName, String version, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetCertificateVersionStringStringCancellationToken">
            <summary>Sets the stub of CertificateClient.GetCertificateVersion(CertificateClient this, String certificateName, String version, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetContacts(System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.GetContacts(CertificateClient this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetContactsAsync(System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.GetContactsAsync(CertificateClient this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetContactsAsyncCancellationToken">
            <summary>Sets the stub of CertificateClient.GetContactsAsync(CertificateClient this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetContactsCancellationToken">
            <summary>Sets the stub of CertificateClient.GetContacts(CertificateClient this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetDeletedCertificate(System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.GetDeletedCertificate(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetDeletedCertificateAsync(System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.GetDeletedCertificateAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetDeletedCertificateAsyncStringCancellationToken">
            <summary>Sets the stub of CertificateClient.GetDeletedCertificateAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetDeletedCertificateStringCancellationToken">
            <summary>Sets the stub of CertificateClient.GetDeletedCertificate(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetDeletedCertificates(System.Boolean,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.GetDeletedCertificates(CertificateClient this, Boolean includePending, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetDeletedCertificatesAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.GetDeletedCertificatesAsync(CertificateClient this, Boolean includePending, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetDeletedCertificatesAsyncBooleanCancellationToken">
            <summary>Sets the stub of CertificateClient.GetDeletedCertificatesAsync(CertificateClient this, Boolean includePending, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetDeletedCertificatesBooleanCancellationToken">
            <summary>Sets the stub of CertificateClient.GetDeletedCertificates(CertificateClient this, Boolean includePending, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetIssuer(System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.GetIssuer(CertificateClient this, String issuerName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetIssuerAsync(System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.GetIssuerAsync(CertificateClient this, String issuerName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetIssuerAsyncStringCancellationToken">
            <summary>Sets the stub of CertificateClient.GetIssuerAsync(CertificateClient this, String issuerName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetIssuerStringCancellationToken">
            <summary>Sets the stub of CertificateClient.GetIssuer(CertificateClient this, String issuerName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetPropertiesOfCertificateVersions(System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.GetPropertiesOfCertificateVersions(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetPropertiesOfCertificateVersionsAsync(System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.GetPropertiesOfCertificateVersionsAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetPropertiesOfCertificateVersionsAsyncStringCancellationToken">
            <summary>Sets the stub of CertificateClient.GetPropertiesOfCertificateVersionsAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetPropertiesOfCertificateVersionsStringCancellationToken">
            <summary>Sets the stub of CertificateClient.GetPropertiesOfCertificateVersions(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetPropertiesOfCertificates(System.Boolean,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.GetPropertiesOfCertificates(CertificateClient this, Boolean includePending, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetPropertiesOfCertificatesAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.GetPropertiesOfCertificatesAsync(CertificateClient this, Boolean includePending, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetPropertiesOfCertificatesAsyncBooleanCancellationToken">
            <summary>Sets the stub of CertificateClient.GetPropertiesOfCertificatesAsync(CertificateClient this, Boolean includePending, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetPropertiesOfCertificatesBooleanCancellationToken">
            <summary>Sets the stub of CertificateClient.GetPropertiesOfCertificates(CertificateClient this, Boolean includePending, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetPropertiesOfIssuers(System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.GetPropertiesOfIssuers(CertificateClient this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetPropertiesOfIssuersAsync(System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.GetPropertiesOfIssuersAsync(CertificateClient this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetPropertiesOfIssuersAsyncCancellationToken">
            <summary>Sets the stub of CertificateClient.GetPropertiesOfIssuersAsync(CertificateClient this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.GetPropertiesOfIssuersCancellationToken">
            <summary>Sets the stub of CertificateClient.GetPropertiesOfIssuers(CertificateClient this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.ImportCertificate(Azure.Security.KeyVault.Certificates.ImportCertificateOptions,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.ImportCertificate(CertificateClient this, ImportCertificateOptions importCertificateOptions, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.ImportCertificateAsync(Azure.Security.KeyVault.Certificates.ImportCertificateOptions,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.ImportCertificateAsync(CertificateClient this, ImportCertificateOptions importCertificateOptions, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.ImportCertificateAsyncImportCertificateOptionsCancellationToken">
            <summary>Sets the stub of CertificateClient.ImportCertificateAsync(CertificateClient this, ImportCertificateOptions importCertificateOptions, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.ImportCertificateImportCertificateOptionsCancellationToken">
            <summary>Sets the stub of CertificateClient.ImportCertificate(CertificateClient this, ImportCertificateOptions importCertificateOptions, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.InitializeStub">
            <summary>Initializes a new instance of type StubCertificateClient</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.MergeCertificate(Azure.Security.KeyVault.Certificates.MergeCertificateOptions,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.MergeCertificate(CertificateClient this, MergeCertificateOptions mergeCertificateOptions, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.MergeCertificateAsync(Azure.Security.KeyVault.Certificates.MergeCertificateOptions,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.MergeCertificateAsync(CertificateClient this, MergeCertificateOptions mergeCertificateOptions, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.MergeCertificateAsyncMergeCertificateOptionsCancellationToken">
            <summary>Sets the stub of CertificateClient.MergeCertificateAsync(CertificateClient this, MergeCertificateOptions mergeCertificateOptions, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.MergeCertificateMergeCertificateOptionsCancellationToken">
            <summary>Sets the stub of CertificateClient.MergeCertificate(CertificateClient this, MergeCertificateOptions mergeCertificateOptions, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.PurgeDeletedCertificate(System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.PurgeDeletedCertificate(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.PurgeDeletedCertificateAsync(System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.PurgeDeletedCertificateAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.PurgeDeletedCertificateAsyncStringCancellationToken">
            <summary>Sets the stub of CertificateClient.PurgeDeletedCertificateAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.PurgeDeletedCertificateStringCancellationToken">
            <summary>Sets the stub of CertificateClient.PurgeDeletedCertificate(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.RestoreCertificateBackup(System.Byte[],System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.RestoreCertificateBackup(CertificateClient this, Byte[] backup, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.RestoreCertificateBackupAsync(System.Byte[],System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.RestoreCertificateBackupAsync(CertificateClient this, Byte[] backup, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.RestoreCertificateBackupAsyncByteArrayCancellationToken">
            <summary>Sets the stub of CertificateClient.RestoreCertificateBackupAsync(CertificateClient this, Byte[] backup, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.RestoreCertificateBackupByteArrayCancellationToken">
            <summary>Sets the stub of CertificateClient.RestoreCertificateBackup(CertificateClient this, Byte[] backup, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.SetContacts(System.Collections.Generic.IEnumerable{Azure.Security.KeyVault.Certificates.CertificateContact},System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.SetContacts(CertificateClient this, IEnumerable`1 contacts, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.SetContactsAsync(System.Collections.Generic.IEnumerable{Azure.Security.KeyVault.Certificates.CertificateContact},System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.SetContactsAsync(CertificateClient this, IEnumerable`1 contacts, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.SetContactsAsyncIEnumerableOfCertificateContactCancellationToken">
            <summary>Sets the stub of CertificateClient.SetContactsAsync(CertificateClient this, IEnumerable`1 contacts, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.SetContactsIEnumerableOfCertificateContactCancellationToken">
            <summary>Sets the stub of CertificateClient.SetContacts(CertificateClient this, IEnumerable`1 contacts, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.StartCreateCertificate(System.String,Azure.Security.KeyVault.Certificates.CertificatePolicy,System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.StartCreateCertificate(CertificateClient this, String certificateName, CertificatePolicy policy, Nullable`1 enabled, IDictionary`2 tags, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.StartCreateCertificateAsync(System.String,Azure.Security.KeyVault.Certificates.CertificatePolicy,System.Nullable{System.Boolean},System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.StartCreateCertificateAsync(CertificateClient this, String certificateName, CertificatePolicy policy, Nullable`1 enabled, IDictionary`2 tags, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.StartCreateCertificateAsyncStringCertificatePolicyNullableOfBooleanIDictionaryOfStringStringCancellationToken">
            <summary>Sets the stub of CertificateClient.StartCreateCertificateAsync(CertificateClient this, String certificateName, CertificatePolicy policy, Nullable`1 enabled, IDictionary`2 tags, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.StartCreateCertificateStringCertificatePolicyNullableOfBooleanIDictionaryOfStringStringCancellationToken">
            <summary>Sets the stub of CertificateClient.StartCreateCertificate(CertificateClient this, String certificateName, CertificatePolicy policy, Nullable`1 enabled, IDictionary`2 tags, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.StartDeleteCertificate(System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.StartDeleteCertificate(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.StartDeleteCertificateAsync(System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.StartDeleteCertificateAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.StartDeleteCertificateAsyncStringCancellationToken">
            <summary>Sets the stub of CertificateClient.StartDeleteCertificateAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.StartDeleteCertificateStringCancellationToken">
            <summary>Sets the stub of CertificateClient.StartDeleteCertificate(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.StartRecoverDeletedCertificate(System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.StartRecoverDeletedCertificate(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.StartRecoverDeletedCertificateAsync(System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.StartRecoverDeletedCertificateAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.StartRecoverDeletedCertificateAsyncStringCancellationToken">
            <summary>Sets the stub of CertificateClient.StartRecoverDeletedCertificateAsync(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.StartRecoverDeletedCertificateStringCancellationToken">
            <summary>Sets the stub of CertificateClient.StartRecoverDeletedCertificate(CertificateClient this, String certificateName, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.UpdateCertificatePolicy(System.String,Azure.Security.KeyVault.Certificates.CertificatePolicy,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.UpdateCertificatePolicy(CertificateClient this, String certificateName, CertificatePolicy policy, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.UpdateCertificatePolicyAsync(System.String,Azure.Security.KeyVault.Certificates.CertificatePolicy,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.UpdateCertificatePolicyAsync(CertificateClient this, String certificateName, CertificatePolicy policy, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.UpdateCertificatePolicyAsyncStringCertificatePolicyCancellationToken">
            <summary>Sets the stub of CertificateClient.UpdateCertificatePolicyAsync(CertificateClient this, String certificateName, CertificatePolicy policy, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.UpdateCertificatePolicyStringCertificatePolicyCancellationToken">
            <summary>Sets the stub of CertificateClient.UpdateCertificatePolicy(CertificateClient this, String certificateName, CertificatePolicy policy, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.UpdateCertificateProperties(Azure.Security.KeyVault.Certificates.CertificateProperties,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.UpdateCertificateProperties(CertificateClient this, CertificateProperties properties, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.UpdateCertificatePropertiesAsync(Azure.Security.KeyVault.Certificates.CertificateProperties,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.UpdateCertificatePropertiesAsync(CertificateClient this, CertificateProperties properties, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.UpdateCertificatePropertiesAsyncCertificatePropertiesCancellationToken">
            <summary>Sets the stub of CertificateClient.UpdateCertificatePropertiesAsync(CertificateClient this, CertificateProperties properties, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.UpdateCertificatePropertiesCertificatePropertiesCancellationToken">
            <summary>Sets the stub of CertificateClient.UpdateCertificateProperties(CertificateClient this, CertificateProperties properties, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.UpdateIssuer(Azure.Security.KeyVault.Certificates.CertificateIssuer,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.UpdateIssuer(CertificateClient this, CertificateIssuer issuer, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.UpdateIssuerAsync(Azure.Security.KeyVault.Certificates.CertificateIssuer,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateClient.UpdateIssuerAsync(CertificateClient this, CertificateIssuer issuer, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.UpdateIssuerAsyncCertificateIssuerCancellationToken">
            <summary>Sets the stub of CertificateClient.UpdateIssuerAsync(CertificateClient this, CertificateIssuer issuer, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.UpdateIssuerCertificateIssuerCancellationToken">
            <summary>Sets the stub of CertificateClient.UpdateIssuer(CertificateClient this, CertificateIssuer issuer, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.VaultUri">
            <summary>Sets the stub of CertificateClient.get_VaultUri(CertificateClient this)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClient.VaultUriGet">
            <summary>Sets the stub of CertificateClient.get_VaultUri(CertificateClient this)</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClientOptions">
            <summary>Stub type of Azure.Security.KeyVault.Certificates.CertificateClientOptions</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClientOptions.#ctor(Azure.Security.KeyVault.Certificates.CertificateClientOptions.ServiceVersion)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClientOptions.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClientOptions.GetHashCode">
            <summary>Sets the stub of ClientOptions.GetHashCode(ClientOptions this)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClientOptions.GetHashCode01">
            <summary>Sets the stub of ClientOptions.GetHashCode(ClientOptions this)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClientOptions.InitializeStub">
            <summary>Initializes a new instance of type StubCertificateClientOptions</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClientOptions.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClientOptions.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClientOptions.ToString">
            <summary>Sets the stub of ClientOptions.ToString(ClientOptions this)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateClientOptions.ToString01">
            <summary>Sets the stub of ClientOptions.ToString(ClientOptions this)</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateContact">
            <summary>Stub type of Azure.Security.KeyVault.Certificates.CertificateContact</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateContact.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateContact.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateContact.InitializeStub">
            <summary>Initializes a new instance of type StubCertificateContact</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateContact.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateContact.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateIssuer">
            <summary>Stub type of Azure.Security.KeyVault.Certificates.CertificateIssuer</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateIssuer.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateIssuer.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateIssuer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateIssuer.InitializeStub">
            <summary>Initializes a new instance of type StubCertificateIssuer</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateIssuer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateIssuer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation">
            <summary>Stub type of Azure.Security.KeyVault.Certificates.CertificateOperation</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.#ctor(Azure.Security.KeyVault.Certificates.CertificateClient,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.Cancel(System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateOperation.Cancel(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.CancelAsync(System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateOperation.CancelAsync(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.CancelAsyncCancellationToken">
            <summary>Sets the stub of CertificateOperation.CancelAsync(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.CancelCancellationToken">
            <summary>Sets the stub of CertificateOperation.Cancel(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.Delete(System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateOperation.Delete(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.DeleteAsync(System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateOperation.DeleteAsync(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.DeleteAsyncCancellationToken">
            <summary>Sets the stub of CertificateOperation.DeleteAsync(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.DeleteCancellationToken">
            <summary>Sets the stub of CertificateOperation.Delete(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.GetHashCode">
            <summary>Sets the stub of Operation`1.GetHashCode(Operation`1 this)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.GetHashCode01">
            <summary>Sets the stub of Operation`1.GetHashCode(Operation`1 this)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.GetRawResponse">
            <summary>Sets the stub of CertificateOperation.GetRawResponse(CertificateOperation this)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.GetRawResponse01">
            <summary>Sets the stub of CertificateOperation.GetRawResponse(CertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.HasCompleted">
            <summary>Sets the stub of CertificateOperation.get_HasCompleted(CertificateOperation this)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.HasCompletedGet">
            <summary>Sets the stub of CertificateOperation.get_HasCompleted(CertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.HasValue">
            <summary>Sets the stub of CertificateOperation.get_HasValue(CertificateOperation this)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.HasValueGet">
            <summary>Sets the stub of CertificateOperation.get_HasValue(CertificateOperation this)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.Id">
            <summary>Sets the stub of CertificateOperation.get_Id(CertificateOperation this)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.IdGet">
            <summary>Sets the stub of CertificateOperation.get_Id(CertificateOperation this)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.InitializeStub">
            <summary>Initializes a new instance of type StubCertificateOperation</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.ToString">
            <summary>Sets the stub of Operation`1.ToString(Operation`1 this)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.ToString01">
            <summary>Sets the stub of Operation`1.ToString(Operation`1 this)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.UpdateStatus(System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateOperation.UpdateStatus(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.UpdateStatusAsync(System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateOperation.UpdateStatusAsync(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.UpdateStatusAsyncCancellationToken">
            <summary>Sets the stub of CertificateOperation.UpdateStatusAsync(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.UpdateStatusCancellationToken">
            <summary>Sets the stub of CertificateOperation.UpdateStatus(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.Value">
            <summary>Sets the stub of CertificateOperation.get_Value(CertificateOperation this)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.ValueGet">
            <summary>Sets the stub of CertificateOperation.get_Value(CertificateOperation this)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.WaitForCompletionAsync(System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateOperation.WaitForCompletionAsync(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.WaitForCompletionAsync(System.TimeSpan,System.Threading.CancellationToken)">
            <summary>Sets the stub of CertificateOperation.WaitForCompletionAsync(CertificateOperation this, TimeSpan pollingInterval, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.WaitForCompletionAsyncCancellationToken">
            <summary>Sets the stub of CertificateOperation.WaitForCompletionAsync(CertificateOperation this, CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateOperation.WaitForCompletionAsyncTimeSpanCancellationToken">
            <summary>Sets the stub of CertificateOperation.WaitForCompletionAsync(CertificateOperation this, TimeSpan pollingInterval, CancellationToken cancellationToken)</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.StubCertificatePolicy">
            <summary>Stub type of Azure.Security.KeyVault.Certificates.CertificatePolicy</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificatePolicy.#ctor(System.String,Azure.Security.KeyVault.Certificates.SubjectAlternativeNames)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificatePolicy.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificatePolicy.#ctor(System.String,System.String,Azure.Security.KeyVault.Certificates.SubjectAlternativeNames)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubCertificatePolicy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificatePolicy.InitializeStub">
            <summary>Initializes a new instance of type StubCertificatePolicy</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubCertificatePolicy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubCertificatePolicy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateProperties">
            <summary>Stub type of Azure.Security.KeyVault.Certificates.CertificateProperties</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateProperties.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateProperties.#ctor(System.Uri)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateProperties.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateProperties.InitializeStub">
            <summary>Initializes a new instance of type StubCertificateProperties</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateProperties.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubCertificateProperties.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.StubImportCertificateOptions">
            <summary>Stub type of Azure.Security.KeyVault.Certificates.ImportCertificateOptions</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubImportCertificateOptions.#ctor(System.String,System.Byte[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubImportCertificateOptions.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubImportCertificateOptions.InitializeStub">
            <summary>Initializes a new instance of type StubImportCertificateOptions</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubImportCertificateOptions.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubImportCertificateOptions.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.StubLifetimeAction">
            <summary>Stub type of Azure.Security.KeyVault.Certificates.LifetimeAction</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubLifetimeAction.#ctor(Azure.Security.KeyVault.Certificates.CertificatePolicyAction)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubLifetimeAction.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubLifetimeAction.InitializeStub">
            <summary>Initializes a new instance of type StubLifetimeAction</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubLifetimeAction.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubLifetimeAction.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.StubMergeCertificateOptions">
            <summary>Stub type of Azure.Security.KeyVault.Certificates.MergeCertificateOptions</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubMergeCertificateOptions.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Byte[]})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubMergeCertificateOptions.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubMergeCertificateOptions.InitializeStub">
            <summary>Initializes a new instance of type StubMergeCertificateOptions</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubMergeCertificateOptions.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubMergeCertificateOptions.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Azure.Security.KeyVault.Certificates.Fakes.StubSubjectAlternativeNames">
            <summary>Stub type of Azure.Security.KeyVault.Certificates.SubjectAlternativeNames</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubSubjectAlternativeNames.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubSubjectAlternativeNames.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="M:Azure.Security.KeyVault.Certificates.Fakes.StubSubjectAlternativeNames.InitializeStub">
            <summary>Initializes a new instance of type StubSubjectAlternativeNames</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubSubjectAlternativeNames.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Azure.Security.KeyVault.Certificates.Fakes.StubSubjectAlternativeNames.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.Extensions.Azure.Fakes.ShimCertificateClientBuilderExtensions">
            <summary>Shim type of Microsoft.Extensions.Azure.CertificateClientBuilderExtensions</summary>
        </member>
        <member name="M:Microsoft.Extensions.Azure.Fakes.ShimCertificateClientBuilderExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.Extensions.Azure.Fakes.ShimCertificateClientBuilderExtensions.AddCertificateClientOf1M0Uri``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Uri,Azure.Core.Extensions.IAzureClientBuilder{Azure.Security.KeyVault.Certificates.CertificateClient,Azure.Security.KeyVault.Certificates.CertificateClientOptions}})">
            <summary>Sets the shim of CertificateClientBuilderExtensions.AddCertificateClient(!!0 builder, Uri vaultUri)</summary>
        </member>
        <member name="M:Microsoft.Extensions.Azure.Fakes.ShimCertificateClientBuilderExtensions.AddCertificateClientOf2M0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``1,Azure.Core.Extensions.IAzureClientBuilder{Azure.Security.KeyVault.Certificates.CertificateClient,Azure.Security.KeyVault.Certificates.CertificateClientOptions}})">
            <summary>Sets the shim of CertificateClientBuilderExtensions.AddCertificateClient(!!0 builder, !!1 configuration)</summary>
        </member>
        <member name="M:Microsoft.Extensions.Azure.Fakes.ShimCertificateClientBuilderExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.Extensions.Azure.Fakes.ShimCertificateClientBuilderExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.Extensions.Azure.Fakes.ShimCertificateClientBuilderExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
    </members>
</doc>
